{"version":3,"sources":["pages/homePage.js","pages/404NotFound.js","config/shipDetailsConfig.js","config/consts/defaultDataConst.js","config/consts/listOfOptionsConst.js","functions/list_getters/countryCodes.js","functions/readXML/readInvoiceXML.js","functions/list_getters/documentTypesGetter.js","functions/readXML/readCmrXML.js","functions/readXML/readXML.js","functions/generateXML/generateInvoice.js","functions/generateXML/generateCMR.js","functions/generateXML/generateXML.js","components/pickers/datePicker.js","components/blocks/cmrFormComponent.js","components/blocks/invoiceFormComponent.js","pages/carDetails.js","router.js","index.js"],"names":["columns","field","headerName","width","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","drawerContainer","overflow","content","flexGrow","padding","spacing","uploadFile","HomePage","history","classes","className","CssBaseline","AppBar","position","Toolbar","Grid","container","justify","Typography","variant","style","marginTop","height","align","rows","documentCallsData","pageSize","onRowClick","e","push","id","disableSelectionOnClick","NotFound","React","Component","config","cmr","cmr_id","remarks","date_of_document","sender_id","sender_name","sender_language_code","sender_tax_id","sender_tax_type_code","sender_person_name","sender_complete_number","sender_email","sender_postcode","sender_street_name","sender_city_name","sender_country_code","sender_country_subdivision_name","consignee_id","consignee_name","consignee_language_code","consignee_tax_id","consignee_tax_type_code","consignee_person_name","consignee_complete_number","consignee_email","consignee_postcode","consignee_street_name","consignee_city_name","consignee_country_code","consignee_country_subdivision_name","carrier_id","carrier_name","carrier_language_code","carrier_tax_id","carrier_tax_type_code","carrier_person_name","carrier_complete_number","carrier_email","carrier_postcode","carrier_street_name","carrier_city_name","carrier_country_code","carrier_country_subdivision_name","sub_carrier_id","sub_carrier_name","sub_carrier_language_code","sub_carrier_tax_id","sub_carrier_tax_type_code","sub_carrier_person_name","sub_carrier_complete_number","sub_carrier_email","sub_carrier_postcode","sub_carrier_street_name","sub_carrier_city_name","sub_carrier_country_code","sub_carrier_country_subdivision_name","date_of_delivery","delivery_place_name","delivery_country_code","date_of_pickup","pickup_location_name","pickup_country_code","additional_note_1","additional_note_2","additional_note_3","gross_weight","volume","cod_amount","established_country_code","truck","trailer","instruction","documentsAttached","consignment","invoice","tradeLineItems","invoice_id","seller_id","seller_name","seller_language_code","seller_tax_id","seller_tax_type_code","seller_person_name","seller_complete_number","seller_email","seller_postcode","seller_street_name","seller_city_name","seller_country_code","seller_country_subdivision_name","buyer_id","buyer_name","buyer_language_code","buyer_tax_id","buyer_tax_type_code","buyer_person_name","buyer_complete_number","buyer_email","buyer_postcode","buyer_street_name","buyer_city_name","buyer_country_code","buyer_country_subdivision_name","net_weight","package_quantity","transport_means_id","occurrence_date_time","due_payable_amount","invoice_currency_code","ibanID","account_name","exemption_reason_code","payment_term_description","label","value","icon","countryCodes","require","getCountryCodes","Object","keys","getCountriesWithCodes","countriesWithCodes","i","length","countryWithCode","values","getCountryWithCodeByCode","countryCode","readInvoiceXML","xml","getElementsByTagName","children","tradeLineItem","tradeLineItemToSave","NR","Name","Description","Net_weight","Gross_weight","Class_code","Origin_country","Charge_amount","Basis_quantity","Billed_quantity","Total_amount","Tax_total_amount","Net_total_amount","seller","buyer","relatedConsignment","documentTypes","getDocumentTypes","getDocumentsWithTypes","documentsWithTypes","documentWithType","getDocumentWithCodeByCode","documentType","readCmrXML","sender","consignee","carrier","sub_carrier","document","documentToSave","TypeCode","Remarks","Date","includedConsignmentItems","transportPackages","item","transportPackage","consignmentToSave","Volume","Nature_of_goods","Number_of_packages","Method_of_pa—Åking","Marks_and_Nos","readXML","fileContent","xmlType","XMLParser","parseFromString","defaultData","generateInvoice","SupplyChainTradeTransaction","IncludedTradeLineItem","TradeProduct","NetWeight","GrossWeight","Classification","ClassCode","originCountryCode","split","OriginCountry","Code","LineTradeAgreement","ProductGrossPrice","ChargeAmount","BasisQuantity","LineTradeDelivery","BilledQuantity","LineTradeSettlement","MonetarySummation","LineTotalAmount","TaxTotalAmount","NetLineTotalAmount","HeaderTradeAgreement","Seller","ID","LanguageCode","DefinedContractDetails","PersonName","MobileTelephone","CompleteNumber","EmailAddress","URI","PostalAddress","Postcode","StreetName","CityName","CountryCode","ContryName","listOfCountries","CountrySubDivisionName","TaxRegistration","RegisteredTax","Buyer","HeaderTradeDelivery","RelatedConsignment","PackageQuantity","SpecifiedTransportMovement","UsedTransportMeans","ActualDespatchEvent","OccurenceDateTime","HeaderTradeSettlement","DuePayableAmount","InvoiceCurrencyCode","PaymentMeans","PayeeCreditorFinancialAccount","IBANID","TradeTax","ExemptionReasonCode","PaymentTerms","CIIMessage","ExchangedDocument","IssueDateTime","generateCMR","console","log","eCMRHeaderDetails","eCMRID","eCMRIssueDate","ContractualRemarks","AdditionalParticularNote","ContentText","IssueLocation","RoadConsignment","GrossVolume","CODAmount","Sender","Consignee","Carrier","SubsequentCarrier","documentTypeCode","AssociatedDocument","FormattedIssueDateTime","ConsigneeDeliveryEvent","ActualOccurrenceDateTime","ActualOccurrenceLocation","CountryName","CarrierPickUpEvent","consignment_item","IncludedConsignmentItem","SequenceNumber","GoodsDescription","IdentificationText","TransportPackage","ItemQuantity","ShippingMarks","MarkingText","TransportDetails","StageCode","ModeCode","ConsignirProvidedRegulatoryFormalitiesInstructions","MMTCCBDAeCMRMessage","downloadXMLfile","xmlValue","data","filename","file","Blob","a","createElement","url","URL","createObjectURL","href","download","body","appendChild","click","setTimeout","removeChild","window","revokeObjectURL","createXML","onError","checkForErrors","errors","Invoice","checkRequiredInvoice","forEach","el","_","isEmpty","checkRequiredFields","invoiceXML","xmlValueInvoice","declaration","cmrXML","xmlValueCMR","startDate","datePicker","props","onSelect","date","setState","color","onCommit","onChange","forceUpdate","state","this","column","key","moment","format","ReactDOM","findDOMNode","selected","dateFormat","formControl","margin","minWidth","formControlNoMargin","formControlNoMargin2","selectEmpty","button","divisionLine","background","borderColor","DropDownEditor","Editors","documentTypesList","documentsAttachedRows","name","editable","editor","options","consignmentRows","correctDateTime","substr","PortForm","updateData","locationNumber","emptyDiv","component","gutterBottom","alignItems","xs","TextField","target","FormControl","InputLabel","Select","labelId","ListOfLanguages","map","language","index","MenuItem","fullWidth","ListOfCountries","country","type","contentEditable","InputLabelProps","shrink","multiline","rowsMax","rowGetter","rowsCount","onGridRowsUpdated","fromRow","toRow","updated","slice","enableCellSelect","Button","startIcon","onClick","row","pop","countryCodesList","unshift","tradeLineItemsColumns","ListOfCurrencies","currency","cc","listOfOptions","listOfOptionsConst","drawerWidth","flexShrink","drawerPaper","getChildComponent","activeItem","setData","dataItem","onload","addEventListener","confirmationMessage","event","returnValue","CarDetails","location","pathname","parseInt","useState","indexOf","find","setActiveItem","defaultDataConst","open","error","openErrorDialog","setOpenErrorDialog","uploadAnchorEl","setUploadAnchorEl","downloadAnchorEl","setDownloadAnchorEl","handleClose","aria-controls","marginRight","aria-haspopup","currentTarget","Menu","anchorEl","keepMounted","Boolean","onClose","htmlFor","missingFields","block","hasOwnProperty","title","text","getElementById","files","reader","FileReader","result","dataCopy","JSON","parse","stringify","readAsText","Drawer","paper","List","ListItem","ListItemIcon","ListItemText","primary","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","Array","isArray","DialogActions","autoFocus","createBrowserHistory","AppRouter","path","exact","render","StrictMode"],"mappings":"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","file":"static/js/main.009dd954.chunk.js","sourcesContent":["import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {DataGrid} from '@material-ui/data-grid';\r\nimport documentCallsData from './../config/JSON/documnetCallsData'\r\n\r\n\r\nconst columns = [\r\n    {field: 'id', headerName: 'ID', width: 100},\r\n    {\r\n        field: 'TruckNumber',\r\n        headerName: 'Truck number',\r\n        width: 200,\r\n    },\r\n    {\r\n        field: 'Country',\r\n        headerName: 'Country',\r\n        width: 200,\r\n    },\r\n    {\r\n        field: 'DocumentNumber',\r\n        headerName: '‚Ññ of document',\r\n        width: 200,\r\n    },\r\n    {\r\n        field: 'DateOfDocument',\r\n        headerName: 'Date of document',\r\n        width: 200,\r\n    },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    uploadFile: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nexport default function HomePage({history}) {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Grid container justify={'space-between'}>\r\n                        <Typography variant=\"h4\">\r\n                            CBM Converter Prototype\r\n                        </Typography>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <main className={classes.content}>\r\n                <Toolbar/>\r\n\r\n                <Grid container style={{marginTop: '30px'}} justify={'center'}>\r\n\r\n                    <div style={{width: '905px', height: '300px', align:'center'}}>\r\n                        <DataGrid\r\n                            rows={documentCallsData}\r\n                            columns={columns}\r\n                            pageSize={4}\r\n                            onRowClick={(e) => {\r\n                                history.push(`/details/${e.id}`);\r\n                            }}\r\n                            disableSelectionOnClick\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n\r\n                <Grid container style={{marginTop: '20px'}} justify={'center'}>\r\n                    <Typography style={{width: '900px'}} variant=\"p\">\r\n                        Prototype is aimed to help public authorities implement electronic information exchange systems.\r\n                        <br/><br/>\r\n                        Cross Border Management Converter Prototype implements transformation of the trade and transport documents, harmonized with UN/CEFACT ISCDM and MMT RDM to the WCO DM and EU CDM datasets based on the UN/CEFACT CBM RDM.\r\n                    </Typography>\r\n                </Grid>\r\n            </main>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default class NotFound extends React.Component {\r\n\r\n    render() {\r\n        return <h1>404 Page does not exists :(</h1>\r\n    }\r\n\r\n}","let config = {\r\n    showDrawerIcons: true,\r\n    addOnCloseEvent: true,\r\n};\r\n\r\nexport {config}","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n    cmr: {\r\n        cmr_id :'',\r\n        remarks :'',\r\n        date_of_document:'',\r\n\r\n        sender_id:'',\r\n        sender_name:'',\r\n        sender_language_code:'',\r\n        sender_tax_id:'',\r\n        sender_tax_type_code:'',\r\n        sender_person_name:'',\r\n        sender_complete_number:'',\r\n        sender_email:'',\r\n        sender_postcode:'',\r\n        sender_street_name:'',\r\n        sender_city_name:'',\r\n        sender_country_code:'',\r\n        sender_country_subdivision_name:'',\r\n\r\n        consignee_id:'',\r\n        consignee_name:'',\r\n        consignee_language_code:'',\r\n        consignee_tax_id:'',\r\n        consignee_tax_type_code:'',\r\n        consignee_person_name:'',\r\n        consignee_complete_number:'',\r\n        consignee_email:'',\r\n        consignee_postcode:'',\r\n        consignee_street_name:'',\r\n        consignee_city_name:'',\r\n        consignee_country_code:'',\r\n        consignee_country_subdivision_name:'',\r\n\r\n        carrier_id:'',\r\n        carrier_name:'',\r\n        carrier_language_code:'',\r\n        carrier_tax_id:'',\r\n        carrier_tax_type_code:'',\r\n        carrier_person_name:'',\r\n        carrier_complete_number:'',\r\n        carrier_email:'',\r\n        carrier_postcode:'',\r\n        carrier_street_name:'',\r\n        carrier_city_name:'',\r\n        carrier_country_code:'',\r\n        carrier_country_subdivision_name:'',\r\n\r\n        sub_carrier_id:'',\r\n        sub_carrier_name:'',\r\n        sub_carrier_language_code:'',\r\n        sub_carrier_tax_id:'',\r\n        sub_carrier_tax_type_code:'',\r\n        sub_carrier_person_name:'',\r\n        sub_carrier_complete_number:'',\r\n        sub_carrier_email:'',\r\n        sub_carrier_postcode:'',\r\n        sub_carrier_street_name:'',\r\n        sub_carrier_city_name:'',\r\n        sub_carrier_country_code:'',\r\n        sub_carrier_country_subdivision_name:'',\r\n        date_of_delivery:'',\r\n        delivery_place_name:'',\r\n        delivery_country_code:'',\r\n        date_of_pickup:'',\r\n        pickup_location_name:'',\r\n        pickup_country_code:'',\r\n        additional_note_1:'',\r\n        additional_note_2:'',\r\n        additional_note_3:'',\r\n        gross_weight:'',\r\n        volume:'',\r\n        cod_amount:'',\r\n        established_country_code:'',\r\n        truck:'',\r\n        trailer:'',\r\n        instruction:'',\r\n\r\n        documentsAttached: [\r\n            {\"NR\": 1}\r\n        ],\r\n        consignment: [\r\n            {\"NR\": 1}\r\n        ],\r\n        },\r\n\r\n    invoice: {\r\n        tradeLineItems: [\r\n            {\"NR\": 1}\r\n        ],\r\n        invoice_id:'',\r\n        date_of_document:'',\r\n        seller_id:'',\r\n        seller_name:'',\r\n        seller_language_code:'',\r\n        seller_tax_id:'',\r\n        seller_tax_type_code:'',\r\n        seller_person_name:'',\r\n        seller_complete_number:'',\r\n        seller_email:'',\r\n        seller_postcode:'',\r\n        seller_street_name:'',\r\n        seller_city_name:'',\r\n        seller_country_code:'',\r\n        seller_country_subdivision_name:'',\r\n        buyer_id:'',\r\n        buyer_name:'',\r\n        buyer_language_code:'',\r\n        buyer_tax_id:'',\r\n        buyer_tax_type_code:'',\r\n        buyer_person_name:'',\r\n        buyer_complete_number:'',\r\n        buyer_email:'',\r\n        buyer_postcode:'',\r\n        buyer_street_name:'',\r\n        buyer_city_name:'',\r\n        buyer_country_code:'',\r\n        buyer_country_subdivision_name:'',\r\n        gross_weight:'',\r\n        net_weight:'',\r\n        package_quantity:'',\r\n        transport_means_id:'',\r\n        occurrence_date_time:'',\r\n        due_payable_amount:'',\r\n        invoice_currency_code:'',\r\n        ibanID:'',\r\n        account_name:'',\r\n        exemption_reason_code:'',\r\n        payment_term_description:'',\r\n    },\r\n}\r\n","import ArticleIcon from '@material-ui/icons/Description';\r\nimport ReceiptIcon from '@material-ui/icons/Receipt';\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [\r\n    {\r\n        label: 'CMR',\r\n        value: 'cmr',\r\n        icon: <ArticleIcon/>\r\n    }, {\r\n        label: 'Invoice',\r\n        value: 'invoice',\r\n        icon: <ReceiptIcon/>\r\n    }\r\n];","const countryCodes = require(\"../../data/countries\")\r\n\r\nexport function getCountryCodes() {\r\n    return Object.keys(countryCodes);\r\n}\r\n\r\nexport function getCountriesWithCodes() {\r\n    let countriesWithCodes = [];\r\n    for (let i = 0; i < Object.keys(countryCodes).length; i++) {\r\n        let countryWithCode = Object.values(countryCodes)[i] + ' - ' + Object.keys(countryCodes)[i];\r\n        countriesWithCodes.push(countryWithCode);\r\n    }\r\n    return countriesWithCodes;\r\n}\r\n\r\nexport function getCountryWithCodeByCode(countryCode) {\r\n    if (countryCode !== '' && countryCode != null) {\r\n        return countryCodes[countryCode] + ' - ' + countryCode;\r\n    }\r\n    return '';\r\n\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {getCountryCodes, getCountriesWithCodes, getCountryWithCodeByCode};","import countryCodes from \"../list_getters/countryCodes\";\r\n\r\nconst readInvoiceXML = (invoice, xml) => {\r\n\r\n   invoice.invoice_id = xml.getElementsByTagName('ExchangedDocument')[0].children[0].value;\r\n   invoice.date_of_document = xml.getElementsByTagName('IssueDateTime')[0].value;\r\n\r\n   invoice.tradeLineItems = [];\r\n\r\n   let tradeLineItems = xml.getElementsByTagName('IncludedTradeLineItem');\r\n   for (let i = 0; i <tradeLineItems.length; i++) {\r\n\r\n      let tradeLineItem = tradeLineItems[i];\r\n\r\n      let tradeLineItemToSave = {\r\n         NR: i + 1,\r\n         Name: tradeLineItem.children[2].children[0].value,\r\n         Description: tradeLineItem.children[2].children[1].value,\r\n         Net_weight: tradeLineItem.children[2].children[2].value,\r\n         Gross_weight: tradeLineItem.children[2].children[3].value,\r\n         Class_code: tradeLineItem.children[2].children[4].children[0].value,\r\n         Origin_country: countryCodes.getCountryWithCodeByCode(tradeLineItem.children[2].children[5].children[0].value),\r\n         Charge_amount: tradeLineItem.children[0].children[0].children[0].value,\r\n         Basis_quantity: tradeLineItem.children[0].children[0].children[1].value,\r\n         Billed_quantity: tradeLineItem.children[1].children[0].value,\r\n         Total_amount: tradeLineItem.children[3].children[0].children[0].value,\r\n         Tax_total_amount: tradeLineItem.children[3].children[0].children[1].value,\r\n         Net_total_amount: tradeLineItem.children[3].children[0].children[2].value,\r\n      }\r\n\r\n      invoice.tradeLineItems.push(tradeLineItemToSave)\r\n\r\n   }\r\n   let seller = xml.getElementsByTagName('Seller')[0];\r\n\r\n\r\n   invoice.seller_id = seller.children[0].value;\r\n   invoice.seller_name = seller.children[1].value;\r\n   invoice.seller_language_code = seller.children[2].value;\r\n   invoice.seller_tax_id = seller.children[5].children[0].value;\r\n   invoice.seller_tax_type_code = seller.children[5].children[1].children[0].value;\r\n   invoice.seller_person_name = seller.children[3].children[0].value;\r\n   invoice.seller_complete_number = seller.children[3].children[1].children[0].value;\r\n   invoice.seller_email = seller.children[3].children[2].children[0].value;\r\n   invoice.seller_postcode = seller.children[4].children[0].value;\r\n   invoice.seller_street_name = seller.children[4].children[1].value;\r\n   invoice.seller_city_name = seller.children[4].children[2].value;\r\n   invoice.seller_country_code = seller.children[4].children[3].value;\r\n   invoice.seller_country_subdivision_name = seller.children[4].children[5].value;\r\n\r\n   let buyer = xml.getElementsByTagName('Buyer')[0];\r\n\r\n   invoice.buyer_id = buyer.children[0].value;\r\n   invoice.buyer_name = buyer.children[1].value;\r\n   invoice.buyer_language_code = buyer.children[2].value;\r\n   invoice.buyer_tax_id = buyer.children[5].children[0].value;\r\n   invoice.buyer_tax_type_code = buyer.children[5].children[1].children[0].value;\r\n   invoice.buyer_person_name = buyer.children[3].children[0].value;\r\n   invoice.buyer_complete_number = buyer.children[3].children[1].children[0].value;\r\n   invoice.buyer_email = buyer.children[3].children[2].children[0].value;\r\n   invoice.buyer_postcode = buyer.children[4].children[0].value;\r\n   invoice.buyer_street_name = buyer.children[4].children[1].value;\r\n   invoice.buyer_city_name = buyer.children[4].children[2].value;\r\n   invoice.buyer_country_code = buyer.children[4].children[3].value;\r\n   invoice.buyer_country_subdivision_name = buyer.children[4].children[5].value;\r\n\r\n   let relatedConsignment = xml.getElementsByTagName('RelatedConsignment')[0];\r\n   invoice.gross_weight = relatedConsignment.children[0].value;\r\n   invoice.net_weight = relatedConsignment.children[1].value\r\n   invoice.package_quantity = relatedConsignment.children[2].value\r\n   invoice.transport_means_id = relatedConsignment.children[3].children[0].children[0].value\r\n\r\n   invoice.occurrence_date_time = xml.getElementsByTagName('OccurenceDateTime')[0].value;\r\n   invoice.due_payable_amount = xml.getElementsByTagName('DuePayableAmount')[0].value;\r\n   invoice.invoice_currency_code = xml.getElementsByTagName('InvoiceCurrencyCode')[0].value;\r\n   invoice.ibanID = xml.getElementsByTagName('IBANID')[0].value;\r\n   invoice.exemption_reason_code = xml.getElementsByTagName('ExemptionReasonCode')[0].value;\r\n   invoice.account_name = xml.getElementsByTagName('PayeeCreditorFinancialAccount')[0].children[1].value;\r\n   invoice.payment_term_description = xml.getElementsByTagName('PaymentTerms')[0].children[0].value;\r\n\r\n\r\n\r\n\r\n   // console.log(\"tradeLineItems \",tradeLineItems)\r\n};\r\n\r\nexport default readInvoiceXML;","const documentTypes = require(\"../../data/document_types\")\r\n\r\nexport function getDocumentTypes() {\r\n    return Object.keys(documentTypes);\r\n}\r\n\r\nexport function getDocumentsWithTypes() {\r\n    let documentsWithTypes = [];\r\n    for (let i = 0; i < Object.keys(documentTypes).length; i++) {\r\n        let documentWithType = Object.values(documentTypes)[i] + ' - ' + Object.keys(documentTypes)[i];\r\n        documentsWithTypes.push(documentWithType);\r\n    }\r\n    return documentsWithTypes;\r\n}\r\n\r\nexport function getDocumentWithCodeByCode(documentType) {\r\n    if (documentType !== '' && documentType != null) {\r\n        return documentTypes[documentType] + ' - ' + documentType;\r\n    }\r\n    return '';\r\n\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {getDocumentTypes, getDocumentsWithTypes, getDocumentWithCodeByCode};","import documentTypes from \"../list_getters/documentTypesGetter\";\r\n\r\nconst readCmrXML = (cmr, xml) => {\r\n   cmr.cmr_id = xml.getElementsByTagName('eCMRID')[0].value;\r\n   cmr.date_of_document = xml.getElementsByTagName('eCMRIssueDate')[0].value;\r\n   cmr.remarks = xml.getElementsByTagName('ContractualRemarks')[0].value;\r\n\r\n   let sender = xml.getElementsByTagName('Sender')[0];\r\n   cmr.sender_id = sender.children[0].value;\r\n   cmr.sender_name = sender.children[1].value;\r\n   cmr.sender_language_code = sender.children[2].value;\r\n   cmr.sender_tax_id = sender.children[5].children[0].value;\r\n   cmr.sender_tax_type_code = sender.children[5].children[1].children[0].value;\r\n   cmr.sender_person_name = sender.children[3].children[0].value;\r\n   cmr.sender_complete_number = sender.children[3].children[1].children[0].value;\r\n   cmr.sender_email = sender.children[3].children[2].children[0].value;\r\n   cmr.sender_postcode = sender.children[4].children[0].value;\r\n   cmr.sender_street_name = sender.children[4].children[1].value;\r\n   cmr.sender_city_name = sender.children[4].children[2].value;\r\n   cmr.sender_country_code = sender.children[4].children[3].value;\r\n   cmr.sender_country_subdivision_name = sender.children[4].children[5].value;\r\n\r\n   let consignee = xml.getElementsByTagName('Consignee')[0];\r\n   cmr.consignee_id = consignee.children[0].value;\r\n   cmr.consignee_name = consignee.children[1].value;\r\n   cmr.consignee_language_code = consignee.children[2].value;\r\n   cmr.consignee_tax_id = consignee.children[5].children[0].value;\r\n   cmr.consignee_tax_type_code = consignee.children[5].children[1].children[0].value;\r\n   cmr.consignee_person_name = consignee.children[3].children[0].value;\r\n   cmr.consignee_complete_number = consignee.children[3].children[1].children[0].value;\r\n   cmr.consignee_email = consignee.children[3].children[2].children[0].value;\r\n   cmr.consignee_postcode = consignee.children[4].children[0].value;\r\n   cmr.consignee_street_name = consignee.children[4].children[1].value;\r\n   cmr.consignee_city_name = consignee.children[4].children[2].value;\r\n   cmr.consignee_country_code = consignee.children[4].children[3].value;\r\n   cmr.consignee_country_subdivision_name = consignee.children[4].children[5].value;\r\n\r\n   let carrier = xml.getElementsByTagName('Carrier')[0];\r\n   cmr.carrier_id = carrier.children[0].value;\r\n   cmr.carrier_name = carrier.children[1].value;\r\n   cmr.carrier_language_code = carrier.children[2].value;\r\n   cmr.carrier_tax_id = carrier.children[5].children[0].value;\r\n   cmr.carrier_tax_type_code = carrier.children[5].children[1].children[0].value;\r\n   cmr.carrier_person_name = carrier.children[3].children[0].value;\r\n   cmr.carrier_complete_number = carrier.children[3].children[1].children[0].value;\r\n   cmr.carrier_email = carrier.children[3].children[2].children[0].value;\r\n   cmr.carrier_postcode = carrier.children[4].children[0].value;\r\n   cmr.carrier_street_name = carrier.children[4].children[1].value;\r\n   cmr.carrier_city_name = carrier.children[4].children[2].value;\r\n   cmr.carrier_country_code = carrier.children[4].children[3].value;\r\n   cmr.carrier_country_subdivision_name = carrier.children[4].children[5].value;\r\n\r\n   let sub_carrier = xml.getElementsByTagName('SubsequentCarrier')[0];\r\n   cmr.sub_carrier_id = sub_carrier.children[0].value;\r\n   cmr.sub_carrier_name = sub_carrier.children[1].value;\r\n   cmr.sub_carrier_language_code = sub_carrier.children[2].value;\r\n   cmr.sub_carrier_tax_id = sub_carrier.children[5].children[0].value;\r\n   cmr.sub_carrier_tax_type_code = sub_carrier.children[5].children[1].children[0].value;\r\n   cmr.sub_carrier_person_name = sub_carrier.children[3].children[0].value;\r\n   cmr.sub_carrier_complete_number = sub_carrier.children[3].children[1].children[0].value;\r\n   cmr.sub_carrier_email = sub_carrier.children[3].children[2].children[0].value;\r\n   cmr.sub_carrier_postcode = sub_carrier.children[4].children[0].value;\r\n   cmr.sub_carrier_street_name = sub_carrier.children[4].children[1].value;\r\n   cmr.sub_carrier_city_name = sub_carrier.children[4].children[2].value;\r\n   cmr.sub_carrier_country_code = sub_carrier.children[4].children[3].value;\r\n   cmr.sub_carrier_country_subdivision_name = sub_carrier.children[4].children[5].value;\r\n\r\n   cmr.date_of_pickup = xml.getElementsByTagName('CarrierPickUpEvent')[0].children[0].value;\r\n   cmr.pickup_location_name = xml.getElementsByTagName('CarrierPickUpEvent')[0].children[1].children[0].value;\r\n   cmr.pickup_country_code = xml.getElementsByTagName('CarrierPickUpEvent')[0].children[1].children[1].value;\r\n\r\n   cmr.date_of_delivery = xml.getElementsByTagName('ConsigneeDeliveryEvent')[0].children[0].value;\r\n   cmr.delivery_place_name = xml.getElementsByTagName('ConsigneeDeliveryEvent')[0].children[1].children[0].value;\r\n   cmr.delivery_country_code = xml.getElementsByTagName('ConsigneeDeliveryEvent')[0].children[1].children[1].value;\r\n\r\n   cmr.additional_note_1 = xml.getElementsByTagName('AdditionalParticularNote')[0].children[0].value;\r\n   cmr.additional_note_2 = xml.getElementsByTagName('AdditionalParticularNote')[1].children[0].value;\r\n   cmr.additional_note_3 = xml.getElementsByTagName('AdditionalParticularNote')[2].children[0].value;\r\n\r\n   cmr.gross_weight = xml.getElementsByTagName('GrossWeight')[0].value;\r\n   cmr.volume = xml.getElementsByTagName('GrossVolume')[0].value;\r\n   cmr.cod_amount = xml.getElementsByTagName('CODAmount')[0].value;\r\n\r\n   cmr.established_country_code = xml.getElementsByTagName('IssueLocation')[0].children[1].value;\r\n   cmr.truck = xml.getElementsByTagName('StageCode')[0].value;\r\n   cmr.trailer = xml.getElementsByTagName('ModeCode')[0].value;\r\n   cmr.instruction = xml.getElementsByTagName('Description')[0].value;\r\n\r\n   let documentsAttached = xml.getElementsByTagName('AssociatedDocument');\r\n   cmr.documentsAttached = []\r\n   for (let i = 0; i <documentsAttached.length; i++) {\r\n\r\n      let document = documentsAttached[i];\r\n      let documentToSave = {\r\n         NR: document.children[1].value,\r\n         TypeCode: documentTypes.getDocumentWithCodeByCode(document.children[0].value),\r\n         Remarks: document.children[2].value,\r\n         Date: document.children[3].value,\r\n      }\r\n\r\n      cmr.documentsAttached.push(documentToSave)\r\n\r\n   }\r\n\r\n   let includedConsignmentItems = xml.getElementsByTagName('IncludedConsignmentItem');\r\n   let transportPackages = xml.getElementsByTagName('TransportPackage');\r\n   cmr.consignment = []\r\n   for (let i = 0; i <includedConsignmentItems.length; i++) {\r\n\r\n      let item = includedConsignmentItems[i];\r\n\r\n      let transportPackage = transportPackages[i];\r\n\r\n      let consignmentToSave = {\r\n         NR: item.children[0].value,\r\n         Gross_weight: item.children[1].value,\r\n         Volume: item.children[2].value,\r\n         Nature_of_goods: item.children[3].children[0].value,\r\n         Number_of_packages: transportPackage.children[0].value,\r\n         Method_of_pa—Åking: transportPackage.children[1].value,\r\n         Marks_and_Nos: transportPackage.children[2].children[0].value,\r\n      };\r\n\r\n\r\n      cmr.consignment.push(consignmentToSave)\r\n\r\n   }\r\n\r\n};\r\n\r\nexport default readCmrXML;","import XMLParser from 'react-xml-parser';\r\nimport defaultData from '../../config/consts/defaultDataConst'\r\nimport readInvoiceXML from \"./readInvoiceXML\";\r\nimport readCmrXML from \"./readCmrXML\";\r\nimport xml from \"xml\";\r\n\r\nfunction readXML(fileContent, xmlType) {\r\n    let xml = new XMLParser().parseFromString(fileContent);\r\n\r\n\r\n    switch (xmlType) {\r\n        case 'invoice':\r\n            let invoice = defaultData.invoice;\r\n\r\n            readInvoiceXML(invoice, xml);\r\n            return invoice;\r\n        case 'cmr':\r\n            let cmr = defaultData.cmr;\r\n            readCmrXML(cmr, xml);\r\n            return cmr;\r\n\r\n    }\r\n\r\n}\r\n\r\n// A function to assign the references on different elements\r\n// function makeReferences(data) {\r\n//     data.health.illList.map(el => {\r\n//         let {NR, crewPassenger} = el;\r\n//         if (crewPassenger === 'Crew') {\r\n//             let crewItem = data.crew.rows.find(item => item.NR === NR);\r\n//             if (!crewItem) {\r\n//                 return el;\r\n//             }\r\n//             el.firstName = crewItem.Given_name;\r\n//             el.familyName = crewItem.Family_name;\r\n//         } else if (crewPassenger === 'Passenger') {\r\n//             let passengerItem = data.passengers.rows.find(item => item.NR === NR);\r\n//             if (!passengerItem) {\r\n//                 return el;\r\n//             }\r\n//             el.firstName = passengerItem.Given_name;\r\n//             el.familyName = passengerItem.Family_name;\r\n//         }\r\n//\r\n//         return el;\r\n//     })\r\n// }\r\n\r\nexport default readXML\r\n\r\n","import listOfCountries from \"../../data/countries\";\r\n\r\nconst generateInvoice = (invoice) => {\r\n\r\n    let SupplyChainTradeTransaction = [];\r\n    for (let i = 0; i < invoice.tradeLineItems.length; i++) {\r\n        let tradeLineItem = invoice.tradeLineItems[i];\r\n        let IncludedTradeLineItem = [];\r\n\r\n        let TradeProduct = [];\r\n        TradeProduct.push({Name: tradeLineItem.Name});\r\n        TradeProduct.push({Description: tradeLineItem.Description});\r\n        TradeProduct.push({NetWeight: tradeLineItem.Net_weight});\r\n        TradeProduct.push({GrossWeight: tradeLineItem.Gross_weight});\r\n        TradeProduct.push({Classification: [{ClassCode:tradeLineItem.Class_code}]});\r\n\r\n        let originCountryCode = '';\r\n        if (tradeLineItem.Origin_country && tradeLineItem.Origin_country !== '') {\r\n            let originCountry = tradeLineItem.Origin_country.split('- ');\r\n            originCountryCode = originCountry[1];\r\n        }\r\n\r\n        TradeProduct.push({OriginCountry: [{Code:originCountryCode}]});\r\n\r\n        IncludedTradeLineItem.push({LineTradeAgreement: [\r\n                {ProductGrossPrice:[\r\n                    {ChargeAmount:tradeLineItem.Charge_amount},\r\n                    {BasisQuantity:tradeLineItem.Basis_quantity}\r\n                    ]}\r\n\r\n            ]});\r\n\r\n        IncludedTradeLineItem.push({LineTradeDelivery: [{BilledQuantity:tradeLineItem.Billed_quantity}]})\r\n        IncludedTradeLineItem.push({TradeProduct: TradeProduct})\r\n        IncludedTradeLineItem.push({LineTradeSettlement: [\r\n                {MonetarySummation:[\r\n                        {LineTotalAmount:tradeLineItem.Total_amount},\r\n                        {TaxTotalAmount:tradeLineItem.Tax_total_amount},\r\n                        {NetLineTotalAmount:tradeLineItem.Net_total_amount}\r\n                    ]}\r\n\r\n            ]});\r\n        SupplyChainTradeTransaction.push({IncludedTradeLineItem: IncludedTradeLineItem})\r\n\r\n    }\r\n\r\n    let HeaderTradeAgreement = [];\r\n\r\n    let Seller = [];\r\n\r\n    Seller.push({ID: invoice.seller_id});\r\n    Seller.push({Name: invoice.seller_name});\r\n    Seller.push({LanguageCode: invoice.seller_language_code});\r\n\r\n    Seller.push({DefinedContractDetails: [\r\n            {PersonName:invoice.seller_person_name},\r\n            {MobileTelephone:[\r\n                    {CompleteNumber: invoice.seller_complete_number},\r\n                ]},\r\n            {EmailAddress: [\r\n                    {URI: invoice.seller_email}\r\n                ]}\r\n        ]});\r\n\r\n    Seller.push({PostalAddress: [\r\n            {Postcode: invoice.seller_postcode},\r\n            {StreetName: invoice.seller_street_name},\r\n            {CityName: invoice.seller_city_name},\r\n            {CountryCode: invoice.seller_country_code},\r\n            {ContryName: listOfCountries[invoice.seller_country_code]},\r\n            {CountrySubDivisionName: invoice.seller_country_subdivision_name},\r\n        ]});\r\n\r\n    Seller.push({TaxRegistration:[\r\n            {ID:invoice.seller_tax_id},\r\n            {RegisteredTax:[\r\n                    {TypeCode:invoice.seller_tax_type_code},\r\n                ]}\r\n        ]});\r\n\r\n    let Buyer = [];\r\n\r\n    Buyer.push({ID: invoice.buyer_id});\r\n    Buyer.push({Name: invoice.buyer_name});\r\n    Buyer.push({LanguageCode: invoice.buyer_language_code});\r\n\r\n    Buyer.push({DefinedContractDetails: [\r\n            {PersonName:invoice.buyer_person_name},\r\n            {MobileTelephone:[\r\n                    {CompleteNumber: invoice.buyer_complete_number},\r\n                ]},\r\n            {EmailAddress: [\r\n                    {URI: invoice.buyer_email}\r\n                ]}\r\n        ]});\r\n\r\n    Buyer.push({PostalAddress: [\r\n            {Postcode: invoice.buyer_postcode},\r\n            {StreetName: invoice.buyer_street_name},\r\n            {CityName: invoice.buyer_city_name},\r\n            {CountryCode: invoice.buyer_country_code},\r\n            {ContryName: listOfCountries[invoice.buyer_country_code]},\r\n            {CountrySubDivisionName: invoice.buyer_country_subdivision_name},\r\n        ]});\r\n    Buyer.push({TaxRegistration:[\r\n            {ID:invoice.buyer_tax_id},\r\n            {RegisteredTax:[\r\n                    {TypeCode:invoice.buyer_tax_type_code},\r\n                ]}\r\n        ]});\r\n\r\n    HeaderTradeAgreement.push({Seller:Seller});\r\n    HeaderTradeAgreement.push({Buyer:Buyer});\r\n    SupplyChainTradeTransaction.push({HeaderTradeAgreement:HeaderTradeAgreement})\r\n\r\n    let HeaderTradeDelivery = [];\r\n    HeaderTradeDelivery.push({RelatedConsignment:[\r\n            {GrossWeight:invoice.gross_weight},\r\n            {NetWeight:invoice.net_weight},\r\n            {PackageQuantity:invoice.package_quantity},\r\n            {SpecifiedTransportMovement:[\r\n                    {UsedTransportMeans:[{ID:invoice.transport_means_id}]}]}\r\n        ]});\r\n    HeaderTradeDelivery.push({ActualDespatchEvent:[{\r\n            OccurenceDateTime:invoice.occurrence_date_time\r\n        }]});\r\n\r\n\r\n    SupplyChainTradeTransaction.push({HeaderTradeDelivery:HeaderTradeDelivery});\r\n\r\n    let HeaderTradeSettlement = [];\r\n\r\n    HeaderTradeSettlement.push({DuePayableAmount:invoice.due_payable_amount})\r\n    HeaderTradeSettlement.push({InvoiceCurrencyCode:invoice.invoice_currency_code})\r\n    HeaderTradeSettlement.push({PaymentMeans:[\r\n            {PayeeCreditorFinancialAccount:[\r\n                    {IBANID: invoice.ibanID},\r\n                    {Name: invoice.account_name}\r\n                ]}\r\n            ]});\r\n    HeaderTradeSettlement.push({TradeTax:[\r\n            {ExemptionReasonCode:invoice.exemption_reason_code}\r\n        ]});\r\n    HeaderTradeSettlement.push({PaymentTerms:[\r\n            {Description:invoice.payment_term_description}\r\n        ]});\r\n\r\n    SupplyChainTradeTransaction.push({HeaderTradeSettlement:HeaderTradeSettlement});\r\n\r\n\r\n    let invoiceXML = {\r\n        CIIMessage:[{\r\n            ExchangedDocument: [\r\n                {ID: invoice.invoice_id},\r\n                {IssueDateTime: invoice.date_of_document},\r\n                ],\r\n\r\n        },\r\n            {SupplyChainTradeTransaction:SupplyChainTradeTransaction},\r\n\r\n        ]\r\n    }\r\n\r\n    return invoiceXML;\r\n};\r\n\r\nexport const checkRequiredInvoice = (errors, invoice) => {\r\n    errors.Invoice = {};\r\n    if (!invoice.invoice_id) errors.Invoice[\"ID\"] = true;\r\n    if (!invoice.date_of_document) errors.Invoice[\"Date of document\"] = true;\r\n}\r\n\r\nexport default generateInvoice;","import listOfCountries from \"../../data/countries\";\r\n\r\nconst generateCMR = (cmr) => {\r\n    console.log(\"generating cmr\")\r\n\r\n    let eCMRHeaderDetails = [];\r\n\r\n    eCMRHeaderDetails.push({eCMRID:cmr.cmr_id});\r\n    eCMRHeaderDetails.push({eCMRIssueDate:cmr.date_of_document});\r\n    eCMRHeaderDetails.push({ContractualRemarks:cmr.remarks});\r\n    eCMRHeaderDetails.push({AdditionalParticularNote:[\r\n            {ContentText:cmr.additional_note_1}\r\n        ]});\r\n    eCMRHeaderDetails.push({AdditionalParticularNote:[\r\n            {ContentText:cmr.additional_note_2}\r\n        ]});\r\n    eCMRHeaderDetails.push({AdditionalParticularNote:[\r\n            {ContentText:cmr.additional_note_3}\r\n        ]});\r\n    eCMRHeaderDetails.push({IssueLocation:[\r\n            {ContryName: listOfCountries[cmr.established_country_code]},\r\n            {CountryCode: cmr.established_country_code},\r\n        ]});\r\n\r\n\r\n    let RoadConsignment = [];\r\n    RoadConsignment.push({GrossWeight:cmr.gross_weight});\r\n    RoadConsignment.push({GrossVolume:cmr.volume});\r\n    RoadConsignment.push({CODAmount:cmr.cod_amount});\r\n\r\n    let Sender = [];\r\n\r\n    Sender.push({ID: cmr.sender_id});\r\n    Sender.push({Name: cmr.sender_name});\r\n    Sender.push({LanguageCode: cmr.sender_language_code});\r\n\r\n    Sender.push({DefinedContractDetails: [\r\n            {PersonName:cmr.sender_person_name},\r\n            {MobileTelephone:[\r\n                    {CompleteNumber: cmr.sender_complete_number},\r\n                ]},\r\n            {EmailAddress: [\r\n                    {URI: cmr.sender_email}\r\n                ]}\r\n        ]});\r\n\r\n    Sender.push({PostalAddress: [\r\n            {Postcode: cmr.sender_postcode},\r\n            {StreetName: cmr.sender_street_name},\r\n            {CityName: cmr.sender_city_name},\r\n            {CountryCode: cmr.sender_country_code},\r\n            {ContryName: listOfCountries[cmr.sender_country_code]},\r\n            {CountrySubDivisionName: cmr.sender_country_subdivision_name},\r\n        ]});\r\n\r\n    Sender.push({TaxRegistration:[\r\n            {ID:cmr.sender_tax_id},\r\n            {RegisteredTax:[\r\n                    {TypeCode:cmr.sender_tax_type_code},\r\n                ]}\r\n        ]});\r\n\r\n    let Consignee = [];\r\n\r\n    Consignee.push({ID: cmr.consignee_id});\r\n    Consignee.push({Name: cmr.consignee_name});\r\n    Consignee.push({LanguageCode: cmr.consignee_language_code});\r\n\r\n    Consignee.push({DefinedContractDetails: [\r\n            {PersonName:cmr.consignee_person_name},\r\n            {MobileTelephone:[\r\n                    {CompleteNumber: cmr.consignee_complete_number},\r\n                ]},\r\n            {EmailAddress: [\r\n                    {URI: cmr.consignee_email}\r\n                ]}\r\n        ]});\r\n\r\n    Consignee.push({PostalAddress: [\r\n            {Postcode: cmr.consignee_postcode},\r\n            {StreetName: cmr.consignee_street_name},\r\n            {CityName: cmr.consignee_city_name},\r\n            {CountryCode: cmr.consignee_country_code},\r\n            {ContryName: listOfCountries[cmr.consignee_country_code]},\r\n            {CountrySubDivisionName: cmr.consignee_country_subdivision_name},\r\n        ]});\r\n    Consignee.push({TaxRegistration:[\r\n            {ID:cmr.consignee_tax_id},\r\n            {RegisteredTax:[\r\n                    {TypeCode:cmr.consignee_tax_type_code},\r\n                ]}\r\n        ]});\r\n\r\n    let Carrier = [];\r\n\r\n    Carrier.push({ID: cmr.carrier_id});\r\n    Carrier.push({Name: cmr.carrier_name});\r\n    Carrier.push({LanguageCode: cmr.carrier_language_code});\r\n\r\n    Carrier.push({DefinedContractDetails: [\r\n            {PersonName:cmr.carrier_person_name},\r\n            {MobileTelephone:[\r\n                    {CompleteNumber: cmr.carrier_complete_number},\r\n                ]},\r\n            {EmailAddress: [\r\n                    {URI: cmr.carrier_email}\r\n                ]}\r\n        ]});\r\n\r\n    Carrier.push({PostalAddress: [\r\n            {Postcode: cmr.carrier_postcode},\r\n            {StreetName: cmr.carrier_street_name},\r\n            {CityName: cmr.carrier_city_name},\r\n            {CountryCode: cmr.carrier_country_code},\r\n            {ContryName: listOfCountries[cmr.carrier_country_code]},\r\n            {CountrySubDivisionName: cmr.carrier_country_subdivision_name},\r\n        ]});\r\n\r\n    Carrier.push({TaxRegistration:[\r\n            {ID:cmr.carrier_tax_id},\r\n            {RegisteredTax:[\r\n                    {TypeCode:cmr.carrier_tax_type_code},\r\n                ]}\r\n        ]});\r\n\r\n    let SubsequentCarrier = [];\r\n\r\n    SubsequentCarrier.push({ID: cmr.sub_carrier_id});\r\n    SubsequentCarrier.push({Name: cmr.sub_carrier_name});\r\n    SubsequentCarrier.push({LanguageCode: cmr.sub_carrier_language_code});\r\n\r\n    SubsequentCarrier.push({DefinedContractDetails: [\r\n            {PersonName:cmr.sub_carrier_person_name},\r\n            {MobileTelephone:[\r\n                    {CompleteNumber: cmr.sub_carrier_complete_number},\r\n                ]},\r\n            {EmailAddress: [\r\n                    {URI: cmr.sub_carrier_email}\r\n                ]}\r\n        ]});\r\n\r\n    SubsequentCarrier.push({PostalAddress: [\r\n            {Postcode: cmr.sub_carrier_postcode},\r\n            {StreetName: cmr.sub_carrier_street_name},\r\n            {CityName: cmr.sub_carrier_city_name},\r\n            {CountryCode: cmr.sub_carrier_country_code},\r\n            {ContryName: listOfCountries[cmr.sub_carrier_country_code]},\r\n            {CountrySubDivisionName: cmr.sub_carrier_country_subdivision_name},\r\n        ]});\r\n    SubsequentCarrier.push({TaxRegistration:[\r\n            {ID:cmr.sub_carrier_tax_id},\r\n            {RegisteredTax:[\r\n                    {TypeCode:cmr.sub_carrier_tax_type_code},\r\n                ]}\r\n        ]});\r\n\r\n\r\n    RoadConsignment.push({Sender:Sender});\r\n    RoadConsignment.push({Consignee:Consignee});\r\n    RoadConsignment.push({Carrier:Carrier});\r\n    RoadConsignment.push({SubsequentCarrier:SubsequentCarrier});\r\n\r\n    for (let i = 0; i <cmr.documentsAttached.length ; i++) {\r\n        let document = cmr.documentsAttached[i];\r\n\r\n        let documentTypeCode = ''\r\n        if (document.TypeCode && document.TypeCode !== '') {\r\n            let typeCode = document.TypeCode.split('- ');\r\n            documentTypeCode = typeCode[1];\r\n        }\r\n        RoadConsignment.push({AssociatedDocument:[\r\n                {TypeCode:documentTypeCode},\r\n                {ID:document.NR},\r\n                {Remarks:document.Remarks},\r\n                {FormattedIssueDateTime:document.Date},\r\n            ]})\r\n\r\n    }\r\n\r\n    RoadConsignment.push({\r\n        ConsigneeDeliveryEvent:[\r\n            {ActualOccurrenceDateTime:cmr.date_of_delivery},\r\n            {ActualOccurrenceLocation:[\r\n                    {Name:cmr.delivery_place_name},\r\n                    {CountryCode: cmr.delivery_country_code},\r\n                    {CountryName: listOfCountries[cmr.delivery_country_code]},\r\n                ]}\r\n        ]\r\n    });\r\n\r\n    RoadConsignment.push({\r\n        CarrierPickUpEvent:[\r\n            {ActualOccurrenceDateTime:cmr.date_of_pickup},\r\n            {ActualOccurrenceLocation:[\r\n                    {Name:cmr.pickup_location_name},\r\n                    {CountryCode: cmr.pickup_country_code},\r\n                    {CountryName: listOfCountries[cmr.pickup_country_code]},\r\n                ]}\r\n        ]\r\n    });\r\n\r\n    for (let i = 0; i <cmr.consignment.length ; i++) {\r\n        let consignment_item = cmr.consignment[i];\r\n        RoadConsignment.push({IncludedConsignmentItem: [\r\n                {SequenceNumber:consignment_item.NR},\r\n                {GrossWeight:consignment_item.Gross_weight},\r\n                {GrossVolume:consignment_item.Volume},\r\n                {GoodsDescription:[{IdentificationText:consignment_item.Nature_of_goods}]}\r\n            ]})\r\n    }\r\n\r\n    for (let i = 0; i <cmr.consignment.length ; i++) {\r\n        let consignment_item = cmr.consignment[i];\r\n        RoadConsignment.push({TransportPackage: [\r\n                {ItemQuantity:consignment_item.Number_of_packages},\r\n                {TypeCode:consignment_item.Method_of_pa—Åking},\r\n                {ShippingMarks:[{MarkingText:consignment_item.Marks_and_Nos}]}\r\n            ]})\r\n\r\n    }\r\n\r\n    RoadConsignment.push({TransportDetails:[\r\n            {StageCode:cmr.truck},\r\n            {ModeCode:cmr.trailer},\r\n        ]});\r\n\r\n    RoadConsignment.push({ConsignirProvidedRegulatoryFormalitiesInstructions:[\r\n            {Description:cmr.instruction},\r\n        ]});\r\n\r\n\r\n    let cmrXML = {\r\n        MMTCCBDAeCMRMessage:[\r\n            {eCMRHeaderDetails:eCMRHeaderDetails},\r\n            {RoadConsignment:RoadConsignment},\r\n\r\n        ]\r\n    }\r\n\r\n    return cmrXML;\r\n\r\n};\r\n\r\nexport const checkRequiredCMR = (errors, cmr) => {\r\n    errors.CMR = {};\r\n    // if (!cmr.invoice_id) errors.Invoice[\"ID\"] = true;\r\n    // if (!cmr.date_of_document) errors.Invoice[\"Date of document\"] = true;\r\n}\r\n\r\nexport default generateCMR;","import xml from 'xml'\r\nimport generateInvoice, {checkRequiredInvoice} from \"./generateInvoice\";\r\nimport _ from 'underscore'\r\nimport generateCMR from \"./generateCMR\";\r\n\r\nfunction createXML(data, onError, checkForErrors,xmlType) {\r\n    if(checkForErrors){\r\n        const errors = checkRequiredFields(data);\r\n        if (!_.isEmpty(errors)) {\r\n            onError(errors);\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    switch (xmlType) {\r\n        case 'invoice':\r\n            let invoiceXML = generateInvoice(data.invoice)\r\n            let xmlValueInvoice = xml([invoiceXML], {declaration: true});\r\n            downloadXMLfile(xmlValueInvoice);\r\n        case 'cmr':\r\n            let cmrXML = generateCMR(data.cmr)\r\n            let xmlValueCMR = xml([cmrXML], {declaration: true});\r\n            downloadXMLfile(xmlValueCMR);\r\n\r\n    }\r\n}\r\n\r\nfunction checkRequiredFields(data) {\r\n    console.log(\"checking for errors\")\r\n    const errors = {};\r\n    checkRequiredInvoice(errors, data.invoice);\r\n\r\n\r\n    //deleting empty objects\r\n    Object.keys(errors).forEach(el => {\r\n        if (_.isEmpty(errors[el])) delete errors[el];\r\n    })\r\n\r\n    return errors;\r\n}\r\n\r\nlet downloadXMLfile = (xmlValue) => {\r\n    let data = xmlValue;\r\n    let filename = `XML config ${new Date()}.xml`\r\n    let file = new Blob([data], /*{type: type}*/);\r\n\r\n    let a = document.createElement(\"a\"),\r\n        url = URL.createObjectURL(file);\r\n    a.href = url;\r\n    a.download = filename;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    setTimeout(function () {\r\n        document.body.removeChild(a);\r\n        window.URL.revokeObjectURL(url);\r\n    }, 100);\r\n}\r\n\r\nexport default createXML;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nlet startDate = new Date();\r\n\r\nclass datePicker extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {color: new Date()};\r\n    }\r\n\r\n    getValue() {\r\n        return {[this.props.column.key]: moment(startDate).format(\"DD/MM/YYYY\")};\r\n    }\r\n\r\n    getInputNode() {\r\n        return ReactDOM.findDOMNode(this).getElementsByTagName(\"input\")[0];\r\n    }\r\n\r\n    onSelect = date => {\r\n        return this.setState({color: date}, () => this.props.onCommit());\r\n    };\r\n    // onChange = date => {\r\n    //     return this.setState({ color: date }, () => this.props.onCommit());\r\n    // };\r\n    // onChange = date => {\r\n    //\r\n    //     console.log(\"\")\r\n    //     if (moment(date,\"DD/MM/YYYY\").isValid()){\r\n    //         return this.setState({ color: date }, () => this.props.onCommit());\r\n    //     }\r\n    //\r\n    //\r\n    //\r\n    // };;\r\n\r\n    onChange = date => {\r\n        startDate = date;\r\n        this.forceUpdate()\r\n    };\r\n    ;\r\n\r\n    render() {\r\n        return <DatePicker selected={startDate} onChange={this.onChange} dateFormat=\"dd/MM/yyyy\"/>;\r\n    }\r\n}\r\n\r\nexport default datePicker;","import React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select'\r\nimport '@date-io/date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ListOfLanguages from \"../../data/languages\";\r\nimport ListOfCountries from \"../../data/countries\";\r\nimport {Editors} from \"react-data-grid-addons\";\r\nimport documentTypes from \"../../functions/list_getters/documentTypesGetter\";\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\nimport datePicker from \"../pickers/datePicker\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 225,\r\n    },\r\n    datePicker: {\r\n        minWidth: 225,\r\n        width: 225\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n    formControlNoMargin2: {\r\n        minWidth: 225,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n\r\n    divisionLine:{\r\n        background: 'black',\r\n        color: 'black',\r\n        borderColor: 'black',\r\n        height: '3px',\r\n        width:\"100%\",\r\n        marginTop:\"30px\"\r\n    }\r\n}));\r\nconst {DropDownEditor} = Editors;\r\nconst documentTypesList = documentTypes.getDocumentsWithTypes();\r\nconst DocumentTypesEditor = <DropDownEditor options={documentTypesList}/>;\r\n\r\nconst documentsAttachedRows = [\r\n    {key: \"NR\", name: \"NR\", editable: false},\r\n    {key: \"TypeCode\", name: \"Type\", editable: true, editor: DocumentTypesEditor},\r\n    {key: \"Remarks\", name: \"Remarks\", editable: true},\r\n    {key: \"Date\", name: \"Date\", editable: true, editor: datePicker}\r\n];\r\n\r\nconst consignmentRows = [\r\n    {key: \"NR\", name: \"NR\", editable: false},\r\n    {key: \"Gross_weight\", name: \"Gross weight\", editable: true},\r\n    {key: \"Volume\", name: \"Volume\", editable: true},\r\n    {key: \"Nature_of_goods\", name: \"Nature of the goods\", editable: true},\r\n    {key: \"Number_of_packages\", name: \"Number of packages\", editable: true},\r\n    {key: \"Method_of_pa—Åking\", name: \"Method of pa—Åking\", editable: true},\r\n    {key: \"Marks_and_Nos\", name: \"Marks and Nos.\", editable: true}\r\n];\r\n\r\nfunction PortForm({data, updateData, locationNumber}) {\r\n    const classes = useStyles();\r\n    const emptyDiv = <div className={classes.formControlNoMargin} style={{height: '0px'}}/>\r\n\r\n    function addRowDocumentsAttached() {\r\n        let number = data.documentsAttached.length + 1\r\n        let row = {NR: number}\r\n        data.documentsAttached.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRowDocumentsAttached() {\r\n        data.documentsAttached.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdatedDocumentsAttached({fromRow, toRow, updated}) {\r\n\r\n        const documentsAttached = data.documentsAttached.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            documentsAttached[i] = {...documentsAttached[i], ...updated};\r\n        }\r\n        data.documentsAttached = documentsAttached;\r\n        updateData(data)\r\n    }\r\n\r\n    function addRowConsignment() {\r\n        let number = data.consignment.length + 1\r\n        let row = {NR: number}\r\n        data.consignment.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRowConsignment() {\r\n        data.consignment.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdatedConsignment({fromRow, toRow, updated}) {\r\n\r\n        const consignment = data.consignment.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            consignment[i] = {...consignment[i], ...updated};\r\n        }\r\n        data.consignment = consignment;\r\n        updateData(data)\r\n    }\r\n\r\n    return <>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            CMR information\r\n        </Typography>\r\n        <Grid container alignItems=\"flex-start\" style={{marginTop: '10px'}} spacing={2}>\r\n\r\n            <Grid container  style={{}} item xs={6}>\r\n                <Typography variant=\"h5\" component=\"h5\" gutterBottom align=\"center\">\r\n                    Sender details\r\n                </Typography>\r\n\r\n                <Grid container justify={'space-between'}style={{marginTop: '10px'}}>\r\n                    <TextField\r\n                        label=\"ID:\"\r\n                        value={data.sender_id}\r\n                        onChange={(e) => updateData({sender_id: e.target.value})}\r\n                        variant=\"outlined\"\r\n                    />\r\n\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        className={classes.formControlNoMargin}\r\n                    >\r\n                        <InputLabel id=\"departure-arrival-label\">Language</InputLabel>\r\n\r\n                        <Select\r\n                            labelId=\"departure-arrival-label\"\r\n                            value={data.sender_language_code}\r\n                            onChange={(e) => {\r\n                                updateData({sender_language_code: e.target.value})\r\n                            }}\r\n                        >\r\n                            {Object.keys(ListOfLanguages).map((language, index) =>\r\n                                <MenuItem key={index} value={language}>\r\n                                    {`${ListOfLanguages[language].name}-  ${language}`}\r\n                                </MenuItem>\r\n                            )}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid container justify={'space-between'}style={{marginTop: '30px'}}>\r\n                    <TextField\r\n                        label=\"Name:\"\r\n                        value={data.sender_name}\r\n                        onChange={(e) => updateData({sender_name: e.target.value})}\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid container justify={'space-between'}style={{marginTop: '30px'}}>\r\n                    <TextField\r\n                        label=\"Tax Registration ID:\"\r\n                        value={data.sender_tax_id}\r\n                        onChange={(e) => updateData({sender_tax_id: e.target.value})}\r\n                        variant=\"outlined\"\r\n                    />\r\n\r\n                    <TextField\r\n                        label=\"Registered Tax/TypeCode:\"\r\n                        value={data.sender_tax_type_code}\r\n                        onChange={(e) => updateData({sender_tax_type_code: e.target.value})}\r\n                        variant=\"outlined\"\r\n                    />\r\n\r\n                </Grid>\r\n                <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '30px'}}>\r\n                    Defined contract details\r\n                </Typography>\r\n                <Grid container justify={'space-between'} style={{marginTop: '10px'}}>\r\n\r\n                    <TextField\r\n                        label=\"Name:\"\r\n                        value={data.sender_person_name}\r\n                        onChange={(e) => updateData({sender_person_name: e.target.value})}\r\n                        variant=\"outlined\"\r\n                    />\r\n\r\n                    <TextField\r\n                        label=\"Mobile telefone:\"\r\n                        value={data.sender_complete_number}\r\n                        onChange={(e) => updateData({sender_complete_number: e.target.value})}\r\n                        variant=\"outlined\"\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n                    <TextField\r\n                        label=\"Email:\"\r\n                        value={data.sender_email}\r\n                        onChange={(e) => updateData({sender_email: e.target.value})}\r\n                        variant=\"outlined\"\r\n                    />\r\n\r\n                    <TextField\r\n                        label=\"Postcode:\"\r\n                        value={data.sender_postcode}\r\n                        onChange={(e) => updateData({sender_postcode: e.target.value})}\r\n                        variant=\"outlined\"\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n                    <TextField\r\n                        label=\"Street:\"\r\n                        value={data.sender_street_name}\r\n                        onChange={(e) => updateData({sender_street_name: e.target.value})}\r\n                        variant=\"outlined\"\r\n                    />\r\n\r\n                    <TextField\r\n                        label=\"City:\"\r\n                        value={data.sender_city_name}\r\n                        onChange={(e) => updateData({sender_city_name: e.target.value})}\r\n                        variant=\"outlined\"\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n                    <FormControl\r\n                        variant=\"outlined\"\r\n                        className={classes.formControlNoMargin}\r\n                    >\r\n                        <InputLabel id=\"departure-arrival-label\">Country</InputLabel>\r\n\r\n                        <Select\r\n                            labelId=\"departure-arrival-label\"\r\n                            value={data.sender_country_code}\r\n                            onChange={(e) => {\r\n                                updateData({sender_country_code: e.target.value})\r\n                            }}\r\n                        >\r\n                            {Object.keys(ListOfCountries).map((country, index) =>\r\n                                <MenuItem key={index} value={country}>\r\n                                    {`${country} - ${ListOfCountries[country]}`}\r\n                                </MenuItem>\r\n                            )}\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <TextField\r\n                        label=\"Country subdivision:\"\r\n                        value={data.sender_country_subdivision_name}\r\n                        onChange={(e) => updateData({sender_country_subdivision_name: e.target.value})}\r\n                        variant=\"outlined\"\r\n                    />\r\n                </Grid>\r\n\r\n            </Grid>\r\n            <Grid container  style={{}} item xs={6}>\r\n                <Typography variant=\"h5\" component=\"h5\" gutterBottom>\r\n                    Document details\r\n                </Typography>\r\n\r\n                <Grid container justify={'space-between'}style={{marginTop: '10px'}}>\r\n                    <TextField\r\n                        label=\"Number of document:\"\r\n                        value={data.cmr_id}\r\n                        onChange={(e) => updateData({cmr_id: e.target.value})}\r\n                        variant=\"outlined\"\r\n                    />\r\n\r\n                    <TextField\r\n                        label=\"Date of document\"\r\n                        type=\"date\"\r\n                        contentEditable={false}\r\n                        className={classes.datePicker}\r\n                        variant={'outlined'}\r\n                        value={correctDateTime(data.date_of_document)}\r\n                        onChange={(e) =>\r\n                            updateData({date_of_document: e.target.value})}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid container justify={'space-between'}style={{marginTop: '30px'}}>\r\n                    <TextField\r\n                        label=\"Remarks:\"\r\n                        value={data.remarks}\r\n                        onChange={(e) => updateData({remarks: e.target.value})}\r\n                        fullWidth\r\n                        multiline\r\n                        rowsMax={2}\r\n                        variant=\"outlined\"\r\n                    />\r\n\r\n                    {emptyDiv}\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n            <hr\r\n                className={classes.divisionLine}\r\n            />\r\n            <Grid container alignItems=\"flex-start\" style={{marginTop: '10px'}} spacing={2}>\r\n\r\n                <Grid container  style={{}} item xs={6}>\r\n                    <Typography variant=\"h5\" component=\"h5\" gutterBottom align=\"center\">\r\n                        Consignee details\r\n                    </Typography>\r\n\r\n                    <Grid container justify={'space-between'}style={{marginTop: '10px'}}>\r\n                        <TextField\r\n                            label=\"ID:\"\r\n                            value={data.consignee_id}\r\n                            onChange={(e) => updateData({consignee_id: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                        <FormControl\r\n                            variant=\"outlined\"\r\n                            className={classes.formControlNoMargin}\r\n                        >\r\n                            <InputLabel id=\"departure-arrival-label\">Language</InputLabel>\r\n\r\n                            <Select\r\n                                labelId=\"departure-arrival-label\"\r\n                                value={data.consignee_language_code}\r\n                                onChange={(e) => {\r\n                                    updateData({consignee_language_code: e.target.value})\r\n                                }}\r\n                            >\r\n                                {Object.keys(ListOfLanguages).map((language, index) =>\r\n                                    <MenuItem key={index} value={language}>\r\n                                        {`${ListOfLanguages[language].name}-  ${language}`}\r\n                                    </MenuItem>\r\n                                )}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid container justify={'space-between'}style={{marginTop: '30px'}}>\r\n                        <TextField\r\n                            label=\"Name:\"\r\n                            value={data.consignee_name}\r\n                            onChange={(e) => updateData({consignee_name: e.target.value})}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid container justify={'space-between'}style={{marginTop: '30px'}}>\r\n                        <TextField\r\n                            label=\"Tax Registration ID:\"\r\n                            value={data.consignee_tax_id}\r\n                            onChange={(e) => updateData({consignee_tax_id: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                        <TextField\r\n                            label=\"Registered Tax/TypeCode:\"\r\n                            value={data.consignee_tax_type_code}\r\n                            onChange={(e) => updateData({consignee_tax_type_code: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                    </Grid>\r\n                    <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '30px'}}>\r\n                        Defined contract details\r\n                    </Typography>\r\n                    <Grid container justify={'space-between'} style={{marginTop: '10px'}}>\r\n\r\n                        <TextField\r\n                            label=\"Name:\"\r\n                            value={data.consignee_person_name}\r\n                            onChange={(e) => updateData({consignee_person_name: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                        <TextField\r\n                            label=\"Mobile telefone:\"\r\n                            value={data.consignee_complete_number}\r\n                            onChange={(e) => updateData({consignee_complete_number: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n                        <TextField\r\n                            label=\"Email:\"\r\n                            value={data.consignee_email}\r\n                            onChange={(e) => updateData({consignee_email: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                        <TextField\r\n                            label=\"Postcode:\"\r\n                            value={data.consignee_postcode}\r\n                            onChange={(e) => updateData({consignee_postcode: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n                        <TextField\r\n                            label=\"Street:\"\r\n                            value={data.consignee_street_name}\r\n                            onChange={(e) => updateData({consignee_street_name: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                        <TextField\r\n                            label=\"City:\"\r\n                            value={data.consignee_city_name}\r\n                            onChange={(e) => updateData({consignee_city_name: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n                        <FormControl\r\n                            variant=\"outlined\"\r\n                            className={classes.formControlNoMargin}\r\n                        >\r\n                            <InputLabel id=\"departure-arrival-label\">Country</InputLabel>\r\n\r\n                            <Select\r\n                                labelId=\"departure-arrival-label\"\r\n                                value={data.consignee_country_code}\r\n                                onChange={(e) => {\r\n                                    updateData({consignee_country_code: e.target.value})\r\n                                }}\r\n                            >\r\n                                {Object.keys(ListOfCountries).map((country, index) =>\r\n                                    <MenuItem key={index} value={country}>\r\n                                        {`${country} - ${ListOfCountries[country]}`}\r\n                                    </MenuItem>\r\n                                )}\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <TextField\r\n                            label=\"Country subdivision:\"\r\n                            value={data.consignee_country_subdivision_name}\r\n                            onChange={(e) => updateData({consignee_country_subdivision_name: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n                <Grid container  style={{}} item xs={6}>\r\n                    <Typography variant=\"h5\" component=\"h5\" gutterBottom align=\"center\">\r\n                        Carrier details\r\n                    </Typography>\r\n\r\n                    <Grid container justify={'space-between'}style={{marginTop: '10px'}}>\r\n                        <TextField\r\n                            label=\"ID:\"\r\n                            value={data.carrier_id}\r\n                            onChange={(e) => updateData({carrier_id: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                        <FormControl\r\n                            variant=\"outlined\"\r\n                            className={classes.formControlNoMargin}\r\n                        >\r\n                            <InputLabel id=\"departure-arrival-label\">Language</InputLabel>\r\n\r\n                            <Select\r\n                                labelId=\"departure-arrival-label\"\r\n                                value={data.carrier_language_code}\r\n                                onChange={(e) => {\r\n                                    updateData({carrier_language_code: e.target.value})\r\n                                }}\r\n                            >\r\n                                {Object.keys(ListOfLanguages).map((language, index) =>\r\n                                    <MenuItem key={index} value={language}>\r\n                                        {`${ListOfLanguages[language].name}-  ${language}`}\r\n                                    </MenuItem>\r\n                                )}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid container justify={'space-between'}style={{marginTop: '30px'}}>\r\n                        <TextField\r\n                            label=\"Name:\"\r\n                            value={data.carrier_name}\r\n                            onChange={(e) => updateData({carrier_name: e.target.value})}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid container justify={'space-between'}style={{marginTop: '30px'}}>\r\n                        <TextField\r\n                            label=\"Tax Registration ID:\"\r\n                            value={data.carrier_tax_id}\r\n                            onChange={(e) => updateData({carrier_tax_id: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                        <TextField\r\n                            label=\"Registered Tax/TypeCode:\"\r\n                            value={data.carrier_tax_type_code}\r\n                            onChange={(e) => updateData({carrier_tax_type_code: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                    </Grid>\r\n                    <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '30px'}}>\r\n                        Defined contract details\r\n                    </Typography>\r\n                    <Grid container justify={'space-between'} style={{marginTop: '10px'}}>\r\n\r\n                        <TextField\r\n                            label=\"Name:\"\r\n                            value={data.carrier_person_name}\r\n                            onChange={(e) => updateData({carrier_person_name: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                        <TextField\r\n                            label=\"Mobile telefone:\"\r\n                            value={data.carrier_complete_number}\r\n                            onChange={(e) => updateData({carrier_complete_number: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n                        <TextField\r\n                            label=\"Email:\"\r\n                            value={data.carrier_email}\r\n                            onChange={(e) => updateData({carrier_email: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                        <TextField\r\n                            label=\"Postcode:\"\r\n                            value={data.carrier_postcode}\r\n                            onChange={(e) => updateData({carrier_postcode: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n                        <TextField\r\n                            label=\"Street:\"\r\n                            value={data.carrier_street_name}\r\n                            onChange={(e) => updateData({carrier_street_name: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                        <TextField\r\n                            label=\"City:\"\r\n                            value={data.carrier_city_name}\r\n                            onChange={(e) => updateData({carrier_city_name: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n                        <FormControl\r\n                            variant=\"outlined\"\r\n                            className={classes.formControlNoMargin}\r\n                        >\r\n                            <InputLabel id=\"departure-arrival-label\">Country</InputLabel>\r\n\r\n                            <Select\r\n                                labelId=\"departure-arrival-label\"\r\n                                value={data.carrier_country_code}\r\n                                onChange={(e) => {\r\n                                    updateData({carrier_country_code: e.target.value})\r\n                                }}\r\n                            >\r\n                                {Object.keys(ListOfCountries).map((country, index) =>\r\n                                    <MenuItem key={index} value={country}>\r\n                                        {`${country} - ${ListOfCountries[country]}`}\r\n                                    </MenuItem>\r\n                                )}\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <TextField\r\n                            label=\"Country subdivision:\"\r\n                            value={data.carrier_country_subdivision_name}\r\n                            onChange={(e) => updateData({carrier_country_subdivision_name: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <hr\r\n                className={classes.divisionLine}\r\n            />\r\n            <Grid container alignItems=\"flex-start\" style={{marginTop: '10px'}} spacing={2}>\r\n                <Grid container  style={{}} item xs={6}>\r\n                    <Typography variant=\"h5\" component=\"h5\" gutterBottom align=\"center\">\r\n                        Place and date of taking over the goods\r\n                    </Typography>\r\n                    <Grid container justify={'space-between'}style={{marginTop: '10px'}}>\r\n                        <TextField\r\n                            label=\"Date\"\r\n                            type=\"date\"\r\n                            contentEditable={false}\r\n                            className={classes.datePicker}\r\n                            variant={'outlined'}\r\n                            value={correctDateTime(data.date_of_pickup)}\r\n                            onChange={(e) =>\r\n                                updateData({date_of_pickup: e.target.value})}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <TextField\r\n                            label=\"Name:\"\r\n                            value={data.pickup_location_name}\r\n                            onChange={(e) => updateData({pickup_location_name: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid container justify={'space-between'}style={{marginTop: '30px'}}>\r\n                        <FormControl\r\n                            variant=\"outlined\"\r\n                            className={classes.formControlNoMargin}\r\n                        >\r\n                            <InputLabel id=\"departure-arrival-label\">Country</InputLabel>\r\n\r\n                            <Select\r\n                                labelId=\"departure-arrival-label\"\r\n                                value={data.pickup_country_code}\r\n                                onChange={(e) => {\r\n                                    updateData({pickup_country_code: e.target.value})\r\n                                }}\r\n                            >\r\n                                {Object.keys(ListOfCountries).map((country, index) =>\r\n                                    <MenuItem key={index} value={country}>\r\n                                        {`${country} - ${ListOfCountries[country]}`}\r\n                                    </MenuItem>\r\n                                )}\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container  style={{}} item xs={6}>\r\n                    <Typography variant=\"h5\" component=\"h5\" gutterBottom align=\"center\">\r\n                        Successive Carrier details\r\n                    </Typography>\r\n\r\n                    <Grid container justify={'space-between'}style={{marginTop: '10px'}}>\r\n                        <TextField\r\n                            label=\"ID:\"\r\n                            value={data.sub_carrier_id}\r\n                            onChange={(e) => updateData({sub_carrier_id: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                        <FormControl\r\n                            variant=\"outlined\"\r\n                            className={classes.formControlNoMargin}\r\n                        >\r\n                            <InputLabel id=\"departure-arrival-label\">Language</InputLabel>\r\n\r\n                            <Select\r\n                                labelId=\"departure-arrival-label\"\r\n                                value={data.sub_carrier_language_code}\r\n                                onChange={(e) => {\r\n                                    updateData({sub_carrier_language_code: e.target.value})\r\n                                }}\r\n                            >\r\n                                {Object.keys(ListOfLanguages).map((language, index) =>\r\n                                    <MenuItem key={index} value={language}>\r\n                                        {`${ListOfLanguages[language].name}-  ${language}`}\r\n                                    </MenuItem>\r\n                                )}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid container justify={'space-between'}style={{marginTop: '30px'}}>\r\n                        <TextField\r\n                            label=\"Name:\"\r\n                            value={data.sub_carrier_name}\r\n                            onChange={(e) => updateData({sub_carrier_name: e.target.value})}\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid container justify={'space-between'}style={{marginTop: '30px'}}>\r\n                        <TextField\r\n                            label=\"Tax Registration ID:\"\r\n                            value={data.sub_carrier_tax_id}\r\n                            onChange={(e) => updateData({sub_carrier_tax_id: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                        <TextField\r\n                            label=\"Registered Tax/TypeCode:\"\r\n                            value={data.sub_carrier_tax_type_code}\r\n                            onChange={(e) => updateData({sub_carrier_tax_type_code: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                    </Grid>\r\n                    <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '30px'}}>\r\n                        Defined contract details\r\n                    </Typography>\r\n                    <Grid container justify={'space-between'} style={{marginTop: '10px'}}>\r\n\r\n                        <TextField\r\n                            label=\"Name:\"\r\n                            value={data.sub_carrier_person_name}\r\n                            onChange={(e) => updateData({sub_carrier_person_name: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                        <TextField\r\n                            label=\"Mobile telefone:\"\r\n                            value={data.sub_carrier_complete_number}\r\n                            onChange={(e) => updateData({sub_carrier_complete_number: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n                        <TextField\r\n                            label=\"Email:\"\r\n                            value={data.sub_carrier_email}\r\n                            onChange={(e) => updateData({sub_carrier_email: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                        <TextField\r\n                            label=\"Postcode:\"\r\n                            value={data.sub_carrier_postcode}\r\n                            onChange={(e) => updateData({sub_carrier_postcode: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n                        <TextField\r\n                            label=\"Street:\"\r\n                            value={data.sub_carrier_street_name}\r\n                            onChange={(e) => updateData({sub_carrier_street_name: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n\r\n                        <TextField\r\n                            label=\"City:\"\r\n                            value={data.sub_carrier_city_name}\r\n                            onChange={(e) => updateData({sub_carrier_city_name: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n                        <FormControl\r\n                            variant=\"outlined\"\r\n                            className={classes.formControlNoMargin}\r\n                        >\r\n                            <InputLabel id=\"departure-arrival-label\">Country</InputLabel>\r\n\r\n                            <Select\r\n                                labelId=\"departure-arrival-label\"\r\n                                value={data.sub_carrier_country_code}\r\n                                onChange={(e) => {\r\n                                    updateData({sub_carrier_country_code: e.target.value})\r\n                                }}\r\n                            >\r\n                                {Object.keys(ListOfCountries).map((country, index) =>\r\n                                    <MenuItem key={index} value={country}>\r\n                                        {`${country} - ${ListOfCountries[country]}`}\r\n                                    </MenuItem>\r\n                                )}\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        <TextField\r\n                            label=\"Country subdivision:\"\r\n                            value={data.sub_carrier_country_subdivision_name}\r\n                            onChange={(e) => updateData({sub_carrier_country_subdivision_name: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n            <hr\r\n                className={classes.divisionLine}\r\n            />\r\n            <Grid container alignItems=\"flex-start\" style={{marginTop: '10px'}} spacing={2}>\r\n                <Grid container  style={{}} item xs={6}>\r\n                    <Typography variant=\"h5\" component=\"h5\" gutterBottom align=\"center\">\r\n                        Place and date of delivery the goods\r\n                    </Typography>\r\n                    <Grid container justify={'space-between'}style={{marginTop: '10px'}}>\r\n                        <TextField\r\n                            label=\"Date\"\r\n                            type=\"date\"\r\n                            contentEditable={false}\r\n                            className={classes.datePicker}\r\n                            variant={'outlined'}\r\n                            value={correctDateTime(data.date_of_delivery)}\r\n                            onChange={(e) =>\r\n                                updateData({date_of_delivery: e.target.value})}\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n\r\n                        <TextField\r\n                            label=\"Name:\"\r\n                            value={data.delivery_place_name}\r\n                            onChange={(e) => updateData({delivery_place_name: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid container justify={'space-between'}style={{marginTop: '30px'}}>\r\n                        <FormControl\r\n                            variant=\"outlined\"\r\n                            className={classes.formControlNoMargin}\r\n                        >\r\n                            <InputLabel id=\"departure-arrival-label\">Country</InputLabel>\r\n\r\n                            <Select\r\n                                labelId=\"departure-arrival-label\"\r\n                                value={data.delivery_country_code}\r\n                                onChange={(e) => {\r\n                                    updateData({delivery_country_code: e.target.value})\r\n                                }}\r\n                            >\r\n                                {Object.keys(ListOfCountries).map((country, index) =>\r\n                                    <MenuItem key={index} value={country}>\r\n                                        {`${country} - ${ListOfCountries[country]}`}\r\n                                    </MenuItem>\r\n                                )}\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container  style={{}} item xs={6}>\r\n                    <Typography variant=\"h5\" component=\"h5\" gutterBottom align=\"center\">\r\n                        Carriers reservations and observations:\r\n                    </Typography>\r\n                    <Grid container justify={'space-between'}style={{marginTop: '10px'}}>\r\n\r\n                        <TextField\r\n                            label=\"Reservation/observation:\"\r\n                            value={data.additional_note_1}\r\n                            onChange={(e) => updateData({additional_note_1: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                            label=\"Reservation/observation:\"\r\n                            value={data.additional_note_2}\r\n                            onChange={(e) => updateData({additional_note_2: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid container justify={'space-between'}style={{marginTop: '30px'}}>\r\n                        <TextField\r\n                            label=\"Reservation/observation:\"\r\n                            value={data.additional_note_3}\r\n                            onChange={(e) => updateData({additional_note_3: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <hr\r\n                className={classes.divisionLine}\r\n            />\r\n            <Grid container alignItems=\"flex-start\" style={{marginTop: '10px'}} spacing={2}>\r\n                <Grid container  style={{}} item xs={6}>\r\n                    <Typography variant=\"h5\" component=\"h5\" gutterBottom align=\"center\">\r\n                        Documents attached\r\n                    </Typography>\r\n                    <ReactDataGrid\r\n                        columns={documentsAttachedRows}\r\n                        rowGetter={i => data.documentsAttached[i]}\r\n                        rowsCount={data.documentsAttached.length}\r\n                        onGridRowsUpdated={onGridRowsUpdatedDocumentsAttached}\r\n                        enableCellSelect={true}\r\n\r\n                    />\r\n                    <Button variant=\"primary\" startIcon={<AddIcon/>} onClick={addRowDocumentsAttached}>Add row</Button>\r\n                    <Button variant=\"primary\" startIcon={<DeleteOutlineIcon/>} onClick={deleteRowDocumentsAttached}>Delete row</Button>\r\n                </Grid>\r\n            </Grid>\r\n            <hr\r\n                className={classes.divisionLine}\r\n            />\r\n            <Grid container alignItems=\"flex-start\" style={{marginTop: '10px'}} spacing={2}>\r\n                <Grid container  style={{}} item xs={6}>\r\n                    <Typography variant=\"h5\" component=\"h5\" gutterBottom align=\"center\">\r\n                        Supply Chain Consignment\r\n                    </Typography>\r\n                    <Grid container justify={'space-between'}style={{marginTop: '10px'}}>\r\n\r\n                        <TextField\r\n                            label=\"Gross weight (total):\"\r\n                            value={data.gross_weight}\r\n                            onChange={(e) => updateData({gross_weight: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                            label=\"Volume (total):\"\r\n                            value={data.volume}\r\n                            onChange={(e) => updateData({volume: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid container justify={'space-between'}style={{marginTop: '30px'}}>\r\n                        <TextField\r\n                            label=\"COD amount:\"\r\n                            value={data.cod_amount}\r\n                            onChange={(e) => updateData({cod_amount: e.target.value})}\r\n                            variant=\"outlined\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <hr\r\n                className={classes.divisionLine}\r\n            />\r\n            <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '30px'}}>\r\n                Consignment\r\n            </Typography>\r\n\r\n            <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n                <ReactDataGrid\r\n                    columns={consignmentRows}\r\n                    rowGetter={i => data.consignment[i]}\r\n                    rowsCount={data.consignment.length}\r\n                    onGridRowsUpdated={onGridRowsUpdatedConsignment}\r\n                    enableCellSelect={true}\r\n\r\n                />\r\n            </Grid>\r\n            <Button variant=\"primary\" startIcon={<AddIcon/>} onClick={addRowConsignment}>Add row</Button>\r\n            <Button variant=\"primary\" startIcon={<DeleteOutlineIcon/>} onClick={deleteRowConsignment}>Delete row</Button>\r\n            <hr\r\n                className={classes.divisionLine}\r\n            />\r\n            <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n                <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControlNoMargin}\r\n                >\r\n                    <InputLabel id=\"departure-arrival-label\">Established in</InputLabel>\r\n\r\n                    <Select\r\n                        labelId=\"departure-arrival-label\"\r\n                        value={data.established_country_code}\r\n                        onChange={(e) => {\r\n                            updateData({established_country_code: e.target.value})\r\n                        }}\r\n                    >\r\n                        {Object.keys(ListOfCountries).map((country, index) =>\r\n                            <MenuItem key={index} value={country}>\r\n                                {`${country} - ${ListOfCountries[country]}`}\r\n                            </MenuItem>\r\n                        )}\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <TextField\r\n                    label=\"Truck:\"\r\n                    value={data.truck}\r\n                    onChange={(e) => updateData({truck: e.target.value})}\r\n                    variant=\"outlined\"\r\n                />\r\n\r\n\r\n                <TextField\r\n                    label=\"Trailer:\"\r\n                    value={data.trailer}\r\n                    onChange={(e) => updateData({trailer: e.target.value})}\r\n                    variant=\"outlined\"\r\n                />\r\n            </Grid>\r\n            <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n                <TextField\r\n                    label=\"Sender's instruction:\"\r\n                    value={data.instruction}\r\n                    onChange={(e) => updateData({instruction: e.target.value})}\r\n                    variant=\"outlined\"\r\n                    multiline\r\n                    fullWidth\r\n                    rowsMax={4}\r\n                />\r\n            </Grid>\r\n        </Grid>\r\n\r\n\r\n\r\n\r\n    </>\r\n}\r\n\r\nfunction correctDateTime(date) {\r\n    date = \"\" + date;\r\n    return date.substr(0, 16);\r\n}\r\n\r\nexport default PortForm;\r\n","import React from \"react\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select'\r\nimport '@date-io/date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ListOfLanguages from '../../data/languages'\r\nimport ListOfCountries from '../../data/countries'\r\nimport ListOfCurrencies from '../../data/currencies'\r\nimport ReactDataGrid from \"react-data-grid\";\r\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\r\nimport countryCodes from \"../../functions/list_getters/countryCodes\";\r\nimport {Editors} from \"react-data-grid-addons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 225,\r\n    },\r\n    datePicker: {\r\n        minWidth: 225,\r\n        width: 225\r\n    },\r\n    formControlNoMargin: {\r\n        minWidth: 225,\r\n    },\r\n}));\r\nconst {DropDownEditor} = Editors;\r\nconst countryCodesList = countryCodes.getCountriesWithCodes();\r\ncountryCodesList.unshift(\"(...)\")\r\nconst CountryCodesEditor = <DropDownEditor options={countryCodesList}/>;\r\n\r\nconst tradeLineItemsColumns = [\r\n    {key: \"NR\", name: \"NR\", editable: false, width: 50},\r\n    {key: \"Name\", name: \"Name\", editable: true, width: 150},\r\n    {key: \"Description\", name: \"Description\", editable: true, width: 250},\r\n    {key: \"Net_weight\", name: \"Net weight\", editable: true, width: 150},\r\n    {key: \"Gross_weight\", name: \"Gross weight\", editable: true, width: 150},\r\n    {key: \"Class_code\", name: \"Class Code\", editable: true, width: 150},\r\n    {key: \"Origin_country\", name: \"Origin  Country\", editable: true, editor: CountryCodesEditor, width: 150},\r\n    {key: \"Charge_amount\", name: \"Charge Amount\", editable: true, width: 150},\r\n    {key: \"Basis_quantity\", name: \"Basis Quantity\", editable: true, width: 150},\r\n    {key: \"Billed_quantity\", name: \"Billed Quantity\", editable: true, width: 150},\r\n    {key: \"Total_amount\", name: \"Total Amount\", editable: true, width: 150},\r\n    {key: \"Tax_total_amount\", name: \"Tax Total Amount\", editable: true, width: 150},\r\n    {key: \"Net_total_amount\", name: \"Net Total Amount\", editable: true, width: 150},\r\n];\r\n\r\nfunction PortForm({data, updateData, locationNumber}) {\r\n    const classes = useStyles();\r\n    const emptyDiv = <div className={classes.formControlNoMargin} style={{height: '0px'}}/>\r\n\r\n    function addRow() {\r\n        console.log(\"adding row\");\r\n        let number = data.tradeLineItems.length + 1\r\n        let row = {NR: number}\r\n        data.tradeLineItems.push(row);\r\n        updateData(data)\r\n    }\r\n\r\n    function deleteRow() {\r\n        data.tradeLineItems.pop();\r\n        updateData(data)\r\n    }\r\n\r\n    function onGridRowsUpdated({fromRow, toRow, updated}) {\r\n\r\n        const tradeLineItems = data.tradeLineItems.slice();\r\n        for (let i = fromRow; i <= toRow; i++) {\r\n            tradeLineItems[i] = {...tradeLineItems[i], ...updated};\r\n        }\r\n        data.tradeLineItems = tradeLineItems;\r\n        updateData(data)\r\n    }\r\n\r\n\r\n    return <>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n            Invoice information\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n            <TextField\r\n                label=\"Number of document:\"\r\n                value={data.invoice_id}\r\n                onChange={(e) => updateData({invoice_id: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Date of document\"\r\n                type=\"date\"\r\n                contentEditable={false}\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                value={correctDateTime(data.date_of_document)}\r\n                onChange={(e) =>\r\n                    updateData({date_of_document: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n            {emptyDiv}\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '30px'}}>\r\n            Sender details\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n\r\n            <TextField\r\n                label=\"ID:\"\r\n                value={data.seller_id}\r\n                onChange={(e) => updateData({seller_id: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n\r\n            <TextField\r\n                label=\"Name:\"\r\n                value={data.seller_name}\r\n                onChange={(e) => updateData({seller_name: e.target.value})}\r\n                variant=\"outlined\"\r\n                // style={{width: '59%'}}\r\n                // multiline\r\n                // rowsMax={2}\r\n                style={{width: 'calc(90% - 400px)'}}\r\n            />\r\n            {/*{emptyDiv}*/}\r\n\r\n\r\n        </Grid>\r\n\r\n        <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"departure-arrival-label\">Language</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"departure-arrival-label\"\r\n                    value={data.seller_language_code}\r\n                    onChange={(e) => {\r\n                        updateData({seller_language_code: e.target.value})\r\n                    }}\r\n                >\r\n                    {Object.keys(ListOfLanguages).map((language, index) =>\r\n                        <MenuItem key={index} value={language}>\r\n                            {`${ListOfLanguages[language].name}-  ${language}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Tax Registration ID:\"\r\n                value={data.seller_tax_id}\r\n                onChange={(e) => updateData({seller_tax_id: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Registered Tax/TypeCode:\"\r\n                value={data.seller_tax_type_code}\r\n                onChange={(e) => updateData({seller_tax_type_code: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '30px'}}>\r\n            Defined contract details\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n            <TextField\r\n                label=\"Name:\"\r\n                value={data.seller_person_name}\r\n                onChange={(e) => updateData({seller_person_name: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Mobile telefone:\"\r\n                value={data.seller_complete_number}\r\n                onChange={(e) => updateData({seller_complete_number: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email:\"\r\n                value={data.seller_email}\r\n                onChange={(e) => updateData({seller_email: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n            <TextField\r\n                label=\"Postcode:\"\r\n                value={data.seller_postcode}\r\n                onChange={(e) => updateData({seller_postcode: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Street:\"\r\n                value={data.seller_street_name}\r\n                onChange={(e) => updateData({seller_street_name: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"City:\"\r\n                value={data.seller_city_name}\r\n                onChange={(e) => updateData({seller_city_name: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"departure-arrival-label\">Country</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"departure-arrival-label\"\r\n                    value={data.seller_country_code}\r\n                    onChange={(e) => {\r\n                        updateData({seller_country_code: e.target.value})\r\n                    }}\r\n                >\r\n                    {Object.keys(ListOfCountries).map((country, index) =>\r\n                        <MenuItem key={index} value={country}>\r\n                            {`${country} - ${ListOfCountries[country]}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Country subdivision:\"\r\n                value={data.seller_country_subdivision_name}\r\n                onChange={(e) => updateData({seller_country_subdivision_name: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDiv}\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '30px'}}>\r\n            Buyer details\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'}>\r\n\r\n            <TextField\r\n                label=\"ID:\"\r\n                value={data.buyer_id}\r\n                onChange={(e) => updateData({buyer_id: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Name:\"\r\n                value={data.buyer_name}\r\n                onChange={(e) => updateData({buyer_name: e.target.value})}\r\n                variant=\"outlined\"\r\n                // style={{width: '59%'}}\r\n                style={{width: 'calc(90% - 400px)'}}\r\n            />\r\n\r\n\r\n\r\n        </Grid>\r\n\r\n        <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"departure-arrival-label\">Language</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"departure-arrival-label\"\r\n                    value={data.buyer_language_code}\r\n                    onChange={(e) => {\r\n                        updateData({buyer_language_code: e.target.value})\r\n                    }}\r\n                >\r\n                    {Object.keys(ListOfLanguages).map((language, index) =>\r\n                        <MenuItem key={index} value={language}>\r\n                            {`${ListOfLanguages[language].name}-  ${language}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Tax Registration ID:\"\r\n                value={data.buyer_tax_id}\r\n                onChange={(e) => updateData({buyer_tax_id: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Registered Tax/TypeCode:\"\r\n                value={data.buyer_tax_type_code}\r\n                onChange={(e) => updateData({buyer_tax_type_code: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '30px'}}>\r\n            Defined contract details\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n            <TextField\r\n                label=\"Name:\"\r\n                value={data.buyer_person_name}\r\n                onChange={(e) => updateData({buyer_person_name: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Mobile telefone:\"\r\n                value={data.buyer_complete_number}\r\n                onChange={(e) => updateData({buyer_complete_number: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Email:\"\r\n                value={data.buyer_email}\r\n                onChange={(e) => updateData({buyer_email: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n            <TextField\r\n                label=\"Postcode:\"\r\n                value={data.buyer_postcode}\r\n                onChange={(e) => updateData({buyer_postcode: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Street:\"\r\n                value={data.buyer_street_name}\r\n                onChange={(e) => updateData({buyer_street_name: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"City:\"\r\n                value={data.buyer_city_name}\r\n                onChange={(e) => updateData({buyer_city_name: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n        <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"departure-arrival-label\">Country</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"departure-arrival-label\"\r\n                    value={data.buyer_country_code}\r\n                    onChange={(e) => {\r\n                        updateData({buyer_country_code: e.target.value})\r\n                    }}\r\n                >\r\n                    {Object.keys(ListOfCountries).map((country, index) =>\r\n                        <MenuItem key={index} value={country}>\r\n                            {`${country} - ${ListOfCountries[country]}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n                label=\"Country subdivision:\"\r\n                value={data.buyer_country_subdivision_name}\r\n                onChange={(e) => updateData({buyer_country_subdivision_name: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            {emptyDiv}\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '30px'}}>\r\n            Trade line items\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n        <ReactDataGrid\r\n            columns={tradeLineItemsColumns}\r\n            rowGetter={i => data.tradeLineItems[i]}\r\n            rowsCount={data.tradeLineItems.length}\r\n            onGridRowsUpdated={onGridRowsUpdated}\r\n            enableCellSelect={true}\r\n\r\n        />\r\n        </Grid>\r\n\r\n        <Button variant=\"primary\" startIcon={<AddIcon/>} onClick={addRow}>Add row</Button>\r\n        <Button variant=\"primary\" startIcon={<DeleteOutlineIcon/>} onClick={deleteRow}>Delete row</Button>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '30px'}}>\r\n            Related Consignment\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n            <TextField\r\n                label=\"Gross Weight:\"\r\n                value={data.gross_weight}\r\n                onChange={(e) => updateData({gross_weight: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Net Weight:\"\r\n                value={data.net_weight}\r\n                onChange={(e) => updateData({net_weight: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Package Quantity:\"\r\n                value={data.package_quantity}\r\n                onChange={(e) => updateData({package_quantity: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n        </Grid>\r\n\r\n\r\n        <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n            <TextField\r\n                label=\"Used  Logistics  Transport Means:\"\r\n                value={data.transport_means_id}\r\n                onChange={(e) => updateData({transport_means_id: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Occurrence\"\r\n                type=\"datetime-local\"\r\n                contentEditable={false}\r\n                className={classes.datePicker}\r\n                variant={'outlined'}\r\n                value={correctDateTime(data.occurrence_date_time)}\r\n                onChange={(e) =>\r\n                    updateData({occurrence_date_time: e.target.value})}\r\n                InputLabelProps={{\r\n                    shrink: true,\r\n                }}\r\n            />\r\n\r\n            {emptyDiv}\r\n        </Grid>\r\n\r\n        <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n            <TextField\r\n                label=\"Due Payable  Amount:\"\r\n                value={data.due_payable_amount}\r\n                onChange={(e) => updateData({due_payable_amount: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.formControlNoMargin}\r\n            >\r\n                <InputLabel id=\"departure-arrival-label\">Currency</InputLabel>\r\n\r\n                <Select\r\n                    labelId=\"departure-arrival-label\"\r\n                    value={data.invoice_currency_code}\r\n                    onChange={(e) => {\r\n                        updateData({invoice_currency_code: e.target.value})\r\n                    }}\r\n                >\r\n                    {ListOfCurrencies.map((currency, index) =>\r\n                        <MenuItem key={index} value={currency.cc}>\r\n                            {`${currency.cc} - ${currency.name}`}\r\n                        </MenuItem>\r\n                    )}\r\n                </Select>\r\n            </FormControl>\r\n\r\n            {emptyDiv}\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '30px'}}>\r\n            Payee Party. Creditor Financial Account\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n            <TextField\r\n                label=\"IBAN:\"\r\n                value={data.ibanID}\r\n                onChange={(e) => updateData({ibanID: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Account:\"\r\n                value={data.account_name}\r\n                onChange={(e) => updateData({account_name: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            {emptyDiv}\r\n        </Grid>\r\n\r\n        <Typography variant=\"h5\" component=\"h5\" gutterBottom style={{marginTop: '30px'}}>\r\n            Trade Tax\r\n        </Typography>\r\n\r\n        <Grid container justify={'space-between'} style={{marginTop: '30px'}}>\r\n\r\n            <TextField\r\n                label=\"Exemption Reason Code:\"\r\n                value={data.exemption_reason_code}\r\n                onChange={(e) => updateData({exemption_reason_code: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n\r\n            <TextField\r\n                label=\"Trade Payment Terms:\"\r\n                value={data.payment_term_description}\r\n                onChange={(e) => updateData({payment_term_description: e.target.value})}\r\n                variant=\"outlined\"\r\n            />\r\n            {emptyDiv}\r\n        </Grid>\r\n    </>\r\n}\r\n\r\nfunction correctDateTime(date) {\r\n    date = \"\" + date;\r\n    return date.substr(0, 16);\r\n}\r\n\r\n\r\n\r\nexport default PortForm;\r\n","import React, {useState} from \"react\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport {config} from \"../config/shipDetailsConfig\";\r\nimport defaultDataConst from \"../config/consts/defaultDataConst\";\r\nimport listOfOptionsConst from \"../config/consts/listOfOptionsConst\";\r\nimport readXML from \"../functions/readXML/readXML\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport createXML from \"../functions/generateXML/generateXML\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport _ from 'underscore'\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CMRFormComponent from \"../components/blocks/cmrFormComponent\";\r\nimport InvoiceFormComponent from \"../components/blocks/invoiceFormComponent\";\r\n\r\nconst listOfOptions = listOfOptionsConst;\r\n\r\n\r\nconst defaultOption = 'CMR';\r\n\r\nconst drawerWidth = config.showDrawerIcons ? 200 : 180;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        // height: 70\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerContainer: {\r\n        overflow: 'auto',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n    },\r\n    uploadFile: {\r\n        display: 'none'\r\n    }\r\n}));\r\n\r\nfunction CarDetails({history}) {\r\n    const location = history.location.pathname;\r\n    let locationNumber = parseInt(location.split('/')[2]);\r\n    locationNumber--;\r\n    const classes = useStyles();\r\n    const [activeItem, setActiveItem] = useState(listOfOptions.indexOf(listOfOptions.find(el => el.label === defaultOption)));\r\n\r\n    const [data, setData] = useState(() => {\r\n    //     let portOfCall = MainPageInfo[locationNumber].portCall;\r\n    //     let eta = MainPageInfo[locationNumber].ETA;\r\n    //     if (eta.split('.').length !== 0) {\r\n    //         let dates = eta.split('.');\r\n    //         if (dates[0].length !== 2) {\r\n    //             eta = `${dates[0]}-${dates[1]}-${dates[2]}T00:00`;\r\n    //         } else {\r\n    //             eta = `${dates[2]}-${dates[1]}-${dates[0]}T00:00`;\r\n    //         }\r\n    //     }\r\n    //     let companyName = MainPageInfo[locationNumber].agent;\r\n    //     let imo = MainPageInfo[locationNumber].imo;\r\n    //     let ship = MainPageInfo[locationNumber].ship;\r\n    //\r\n        const def = defaultDataConst;\r\n    //     def.port.portOfCall = portOfCall;\r\n    //     def.port.ETAPortOfCall = eta;\r\n    //     def.port.agent.company = companyName;\r\n    //     def.ship.name = ship;\r\n    //     def.ship.IMOnumber = imo;\r\n        return def\r\n    });\r\n    const [openErrorDialog, setOpenErrorDialog] = useState({open: false, error: {}});\r\n    const [uploadAnchorEl, setUploadAnchorEl] = React.useState(null);\r\n    const [downloadAnchorEl, setDownloadAnchorEl] = React.useState(null);\r\n    const handleUploadClick = (event) => {\r\n        setUploadAnchorEl(event.currentTarget);\r\n    };\r\n    const handleDownloadClick = (event) => {\r\n        setDownloadAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setUploadAnchorEl(null);\r\n        setDownloadAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline/>\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Grid container justify={'space-between'}>\r\n                        <Typography variant=\"h4\">\r\n                            CBM Converter Prototype\r\n                        </Typography>\r\n                        <div>\r\n                            <Grid container justify={'flex-end'} style={{marginTop: '5px'}}>\r\n                                <Button\r\n                                    aria-controls=\"upload-menu\"\r\n                                    style={{marginRight: '30px'}}\r\n                                    variant=\"contained\"\r\n                                    startIcon={<CloudUploadIcon/>}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={handleUploadClick}\r\n                                >\r\n                                    Upload\r\n                                </Button>\r\n                                <Menu\r\n                                    id=\"upload-menu\"\r\n                                    anchorEl={uploadAnchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(uploadAnchorEl)}\r\n                                    onClose={handleClose}\r\n                                >\r\n                                    <MenuItem onClick={handleClose}>\r\n                                        <label htmlFor=\"read-invoice-xml-file\">Upload Invoice XML document</label>\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={handleClose}>\r\n                                        <label htmlFor=\"read-cmr-xml-file\">Upload CMR XML document</label>\r\n                                    </MenuItem>\r\n                                </Menu>\r\n                                <Button\r\n                                    aria-controls=\"download-menu\"\r\n                                    startIcon={<GetAppIcon/>}\r\n                                    aria-haspopup=\"true\"\r\n                                    onClick={handleDownloadClick}\r\n                                    variant=\"contained\"\r\n                                >\r\n                                    Download\r\n                                </Button>\r\n                                <Menu\r\n                                    id=\"download-menu\"\r\n                                    anchorEl={downloadAnchorEl}\r\n                                    keepMounted\r\n                                    open={Boolean(downloadAnchorEl)}\r\n                                    onClose={handleClose}\r\n                                >\r\n                                    <MenuItem onClick={() => {\r\n                                        createXML(data, () => {}, false,\"invoice\")\r\n                                        handleClose();\r\n                                    }}>Save Invoice to XML (as draft)</MenuItem>\r\n                                    <MenuItem onClick={() => {\r\n                                        const onError = (errors) => {\r\n                                            let missingFields = [];\r\n                                            for (let block in errors) {\r\n                                                if (!errors.hasOwnProperty(block) || _.isEmpty(errors['' + block])) continue;\r\n                                                missingFields.push(`Block ${block}:`);\r\n                                                for (let field in errors['' + block]) {\r\n                                                    if (!errors['' + block].hasOwnProperty(field)) continue;\r\n                                                    if (typeof errors[block][field] === typeof true) {\r\n                                                        missingFields.push(`‚Üí  ${field} is empty`);\r\n                                                    } else {\r\n                                                        missingFields.push(`‚Üí  ${field} columns are empty`);\r\n                                                    }\r\n                                                }\r\n                                                missingFields.push(\"\");\r\n                                            }\r\n                                            setOpenErrorDialog({\r\n                                                open: true,\r\n                                                error: {\r\n                                                    title: \"Please fill in required fields first: \",\r\n                                                    text: missingFields\r\n                                                }\r\n                                            })\r\n                                        }\r\n                                   createXML(data, onError, true,\"invoice\");\r\n                                      handleClose();\r\n                                    }}>Generate full invoice XML file</MenuItem>\r\n                                    <MenuItem onClick={() => {\r\n                                        createXML(data, () => {}, false,\"cmr\")\r\n                                        handleClose();\r\n                                    }}>Save CMR to XML (as draft)</MenuItem>\r\n                                </Menu>\r\n                            </Grid>\r\n                            <input\r\n                                className={classes.uploadFile}\r\n                                onChange={() => {\r\n                                    const file = document.getElementById(\"read-invoice-xml-file\").files[0];\r\n                                    const reader = new FileReader();\r\n\r\n                                    reader.onload = (() => {\r\n                                        try {\r\n                                            let invoice = readXML(reader.result,'invoice');\r\n\r\n                                            let dataCopy = JSON.parse(JSON.stringify(data));\r\n                                            console.log(\"invoice in main \", invoice);\r\n                                            setData({\r\n                                                ...dataCopy, ...{\r\n                                                    invoice\r\n                                                }\r\n                                            });\r\n                                        } catch (e) {\r\n                                            setOpenErrorDialog({\r\n                                                open: true, error: {\r\n                                                    title: 'Error while reading XML',\r\n                                                    text: [e]\r\n                                                }\r\n                                            })\r\n                                            console.error(e);\r\n                                        }\r\n                                    })\r\n                                    reader.readAsText(file);\r\n                                }}\r\n                                id=\"read-invoice-xml-file\"\r\n                                type=\"file\"\r\n                            />\r\n                            <input\r\n                                className={classes.uploadFile}\r\n                                onChange={() => {\r\n                                    console.log('Change!!!')\r\n                                    const file = document.getElementById(\"read-cmr-xml-file\").files[0];\r\n                                    const reader = new FileReader();\r\n\r\n                                    reader.onload = (() => {\r\n                                        try {\r\n                                            let cmr = readXML(reader.result,'cmr');\r\n\r\n                                            let dataCopy = JSON.parse(JSON.stringify(data));\r\n                                            setData({\r\n                                                ...dataCopy, ...{\r\n                                                    cmr\r\n                                                }\r\n                                            });\r\n                                        } catch (e) {\r\n                                            setOpenErrorDialog({\r\n                                                open: true, error: {\r\n                                                    title: 'Error while reading XML',\r\n                                                    text: [e]\r\n                                                }\r\n                                            })\r\n                                            console.error(e);\r\n                                        }\r\n                                    })\r\n                                    reader.readAsText(file);\r\n                                }}\r\n                                id=\"read-cmr-xml-file\"\r\n                                type=\"file\"\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <Drawer\r\n                className={classes.drawer}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: classes.drawerPaper,\r\n                }}\r\n            >\r\n                <Toolbar/>\r\n                <div className={classes.drawerContainer}>\r\n                    <List>\r\n                        {listOfOptions.map((item, index) => (\r\n                            <ListItem\r\n                                key={index}\r\n                                button\r\n                                color={'success'}\r\n                                selected={activeItem === index}\r\n                                onClick={() => {\r\n                                    setActiveItem(index)\r\n                                }}>\r\n\r\n                                {(config.showDrawerIcons && item.icon) && <ListItemIcon>{item.icon}</ListItemIcon>}\r\n                                <ListItemText primary={item.label}/>\r\n\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n            <main className={classes.content}>\r\n                <Toolbar/>\r\n                {getChildComponent(activeItem, [data, setData])}\r\n            </main>\r\n\r\n            <Dialog\r\n                open={openErrorDialog.open}\r\n                onClose={() => setOpenErrorDialog({\r\n                    open: false,\r\n                    error: {text: []}\r\n                })}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{openErrorDialog.error.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {\r\n                            (Array.isArray(openErrorDialog.error.text))\r\n                                ?\r\n                                openErrorDialog.error.text.map((el) => <>{el}<br/></>)\r\n                                : openErrorDialog.error.text\r\n                        }\r\n\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button\r\n                        onClick={() => setOpenErrorDialog({\r\n                            open: false,\r\n                            error: {}\r\n                        })}\r\n                        color=\"primary\" autoFocus>\r\n                        Understood\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction getChildComponent(activeItem, [data, setData]) {\r\n    let selectedItem = listOfOptions[activeItem].value;\r\n\r\n    switch (selectedItem) {\r\n        case 'cmr':\r\n            return <CMRFormComponent data={data.cmr} updateData={(dataItem) => {\r\n                setData({...data, cmr: {...data.cmr, ...dataItem}})\r\n            }}/>\r\n        case 'invoice':\r\n            return <InvoiceFormComponent data={data.invoice} updateData={(dataItem) => {\r\n                setData({...data, invoice: {...data.invoice, ...dataItem}})\r\n            }}/>\r\n        default:\r\n            return <h1>Not supported yet</h1>\r\n    }\r\n}\r\n\r\nif (config.addOnCloseEvent) {\r\n    window.onload = function () {\r\n        window.addEventListener(\"beforeunload\", function (e) {\r\n            const confirmationMessage = 'It looks like you have been editing something. '\r\n                + 'If you leave before saving, your changes will be lost.';\r\n\r\n            (e || window.event).returnValue = confirmationMessage; //Gecko + IE\r\n            return confirmationMessage; //Gecko + Webkit, Safari, Chrome etc.\r\n        });\r\n    };\r\n}\r\nexport default CarDetails;","import React from \"react\";\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\nimport {createBrowserHistory} from 'history';\r\n\r\nimport HomePage from \"./pages/homePage\";\r\nimport NotFound from \"./pages/404NotFound\";\r\nimport CarDetails from \"./pages/carDetails\";\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default class AppRouter extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Router history={history}>\r\n                <Switch>\r\n                    <Route path={'/'} exact component={HomePage}/>\r\n                    <Route path={'/details/:id'} component={CarDetails}/>\r\n                    <Route path={'/fal-ukraine/'} exact component={HomePage}/>\r\n                    <Route path={'/fal-ukraine/details/:id'} exact component={HomePage}/>\r\n                    <Route component={NotFound}/>\r\n                </Switch>\r\n            </Router>\r\n        )\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppRouter from \"./router\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <AppRouter/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}